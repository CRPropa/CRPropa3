<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classcrpropa_1_1NuclearDecay" kind="class" language="C++" prot="public">
    <compoundname>crpropa::NuclearDecay</compoundname>
    <basecompoundref refid="classcrpropa_1_1Module" prot="public" virt="non-virtual">Module</basecompoundref>
    <includes refid="NuclearDecay_8h" local="no">crpropa/module/NuclearDecay.h</includes>
    <innerclass refid="structcrpropa_1_1NuclearDecay_1_1DecayMode" prot="private">crpropa::NuclearDecay::DecayMode</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcrpropa_1_1NuclearDecay_1ab6e1fbde91d4eed5fc908aebbe727bef" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double limit</definition>
        <argsstring></argsstring>
        <name>limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="26" column="8" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1NuclearDecay_1ac35d80b8cbf88b68698e973eb77185d1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool haveElectrons</definition>
        <argsstring></argsstring>
        <name>haveElectrons</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="27" column="6" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1NuclearDecay_1aeb2730dc850f214c5a72ec5c17630fb5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool havePhotons</definition>
        <argsstring></argsstring>
        <name>havePhotons</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="28" column="6" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1NuclearDecay_1a46aa721c91633b8d48f38d79533d6bc6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool haveNeutrinos</definition>
        <argsstring></argsstring>
        <name>haveNeutrinos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="29" column="6" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1NuclearDecay_1a65dc319e633cf647015bc6f69e9d5a2d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; DecayMode &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;DecayMode&gt; &gt; decayTable</definition>
        <argsstring></argsstring>
        <name>decayTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="36" column="13" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcrpropa_1_1NuclearDecay_1ab8fb67bd42743f6175aab9a4e90bc92b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NuclearDecay</definition>
        <argsstring>(bool electrons=false, bool photons=false, bool neutrinos=false, double limit=0.1)</argsstring>
        <name>NuclearDecay</name>
        <param>
          <type>bool</type>
          <declname>electrons</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>photons</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>neutrinos</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>double</type>
          <declname>limit</declname>
          <defval>0.1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>photonField</parametername>
</parameternamelist>
<parameterdescription>
<para>target photon field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>photons</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, add secondary photons as candidates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>neutrinos</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, add secondary neutrinos as candidates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>step size limit as fraction of mean free path </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1NuclearDecay_1a29ee54f3ff5603da67762de093cff3b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setLimit</definition>
        <argsstring>(double limit)</argsstring>
        <name>setLimit</name>
        <param>
          <type>double</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="46" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1NuclearDecay_1aca5f612cb1c832c1a9fa8e4989efe69a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setHaveElectrons</definition>
        <argsstring>(bool b)</argsstring>
        <name>setHaveElectrons</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="47" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1NuclearDecay_1a066a49fb07366c030b9403706f83087a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setHavePhotons</definition>
        <argsstring>(bool b)</argsstring>
        <name>setHavePhotons</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="48" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1NuclearDecay_1a93dc03a4c252a492642de79f38257821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setHaveNeutrinos</definition>
        <argsstring>(bool b)</argsstring>
        <name>setHaveNeutrinos</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="49" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1NuclearDecay_1ab59d2de78ed0589c122df3d6c0478b41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void process</definition>
        <argsstring>(Candidate *candidate) const</argsstring>
        <name>process</name>
        <reimplements refid="classcrpropa_1_1Module_1adea37d81da751bd3c2825652e1c215de">process</reimplements>
        <param>
          <type><ref refid="classcrpropa_1_1Candidate" kindref="compound">Candidate</ref> *</type>
          <declname>candidate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="50" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1NuclearDecay_1a3c78883ae570810fb93d92793e0ad5ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void performInteraction</definition>
        <argsstring>(Candidate *candidate, int channel) const</argsstring>
        <name>performInteraction</name>
        <param>
          <type><ref refid="classcrpropa_1_1Candidate" kindref="compound">Candidate</ref> *</type>
          <declname>candidate</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="51" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1NuclearDecay_1a70ad1d58ac9daf73fe97fbdd0f4820ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gammaEmission</definition>
        <argsstring>(Candidate *candidate, int channel) const</argsstring>
        <name>gammaEmission</name>
        <param>
          <type><ref refid="classcrpropa_1_1Candidate" kindref="compound">Candidate</ref> *</type>
          <declname>candidate</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="52" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1NuclearDecay_1ad63e75208c4db9433b5bfe59fdd10287" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void betaDecay</definition>
        <argsstring>(Candidate *candidate, bool isBetaPlus) const</argsstring>
        <name>betaDecay</name>
        <param>
          <type><ref refid="classcrpropa_1_1Candidate" kindref="compound">Candidate</ref> *</type>
          <declname>candidate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isBetaPlus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="53" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1NuclearDecay_1abbe1ed5ae6fe98aa711dbb716a324e4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nucleonEmission</definition>
        <argsstring>(Candidate *candidate, int dA, int dZ) const</argsstring>
        <name>nucleonEmission</name>
        <param>
          <type><ref refid="classcrpropa_1_1Candidate" kindref="compound">Candidate</ref> *</type>
          <declname>candidate</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dA</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="54" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1NuclearDecay_1a64c2e915dd2c0f318b6c93da9167bebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double meanFreePath</definition>
        <argsstring>(int id, double gamma)</argsstring>
        <name>meanFreePath</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the mean free path. This is not used in the simulation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>PDG particle id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gamma</parametername>
</parameternamelist>
<parameterdescription>
<para>Lorentz factor of particle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The mean free path [in meters] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="63" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Module_1a9025df426d11cbe30c5500d3ffb5d33c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string getDescription</definition>
        <argsstring>() const</argsstring>
        <name>getDescription</name>
        <reimplementedby refid="classcrpropa_1_1PeriodicBox_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1ReflectiveBox_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1CubicBoundary_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1SphericalBoundary_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1EllipsoidalBoundary_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1CylindricalBoundary_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1MaximumTrajectoryLength_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1MinimumEnergy_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1MinimumRigidity_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1MinimumRedshift_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1MinimumChargeNumber_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1MinimumEnergyPerParticleId_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1DetectionLength_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1DiffusionSDE_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1EMCascade_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1Observer_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1ShellOutput_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1ShellOutput1D_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1ShellPropertyOutput_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1ParticleCollector_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1PhotonEleCa_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1PhotonOutput1D_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1PropagationBP_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1PropagationCK_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1Redshift_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1FutureRedshift_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1RestrictToRegion_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1SimplePropagation_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1SynchrotronRadiation_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1TextOutput_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1PerformanceModule_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1ParticleFilter_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1EmissionMapFiller_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1ModuleList_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <reimplementedby refid="classcrpropa_1_1ModuleListRunner_1aea425314aebc36d0f6bf7671705158da">getDescription</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Module.h" line="24" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Module_1a3406b56004afdbe7a1815a541d40de99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setDescription</definition>
        <argsstring>(const std::string &amp;description)</argsstring>
        <name>setDescription</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Module.h" line="25" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Module_1a9f2321c49330b61a52ce55c2015e4c49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void process</definition>
        <argsstring>(ref_ptr&lt; Candidate &gt; candidate) const</argsstring>
        <name>process</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Candidate" kindref="compound">Candidate</ref> &gt;</type>
          <declname>candidate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Module.h" line="27" column="13" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Module.h" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Referenced_1a6ef7442f4d857baf3d3a39fdeec4aadd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t addReference</definition>
        <argsstring>() const</argsstring>
        <name>addReference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="42" column="15" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="42" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Referenced_1ab9f5dbbba1431274016b3d74426953f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t removeReference</definition>
        <argsstring>() const</argsstring>
        <name>removeReference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="56" column="15" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="56" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Referenced_1adab41cca5664d4668930f93beefa39b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int removeReferenceNoDelete</definition>
        <argsstring>() const</argsstring>
        <name>removeReferenceNoDelete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="80" column="5" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Referenced_1a74487fc4399bfa67c7251dae5d4247cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t getReferenceCount</definition>
        <argsstring>() const</argsstring>
        <name>getReferenceCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="84" column="15" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="84" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Nuclear decay of unstable nuclei. </para>
    </briefdescription>
    <detaileddescription>
<para>This module simulates the nuclear decay of unstable nuclei using data from NuDat2. All decay modes are considered: alpha, beta+- and gamma decay, as well as proton- and neutron dripping. The resulting non-hadronic secondary particles (e+, e-, neutrinos, gamma) can optionally be created.</para>
<para>For details on the preprocessing of the NuDat2 data refer to &quot;CRPropa3-data/calc_decay.py&quot;. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>NuclearDecay</label>
        <link refid="classcrpropa_1_1NuclearDecay"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Module</label>
        <link refid="classcrpropa_1_1Module"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Referenced</label>
        <link refid="classcrpropa_1_1Referenced"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>NuclearDecay</label>
        <link refid="classcrpropa_1_1NuclearDecay"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Module</label>
        <link refid="classcrpropa_1_1Module"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Referenced</label>
        <link refid="classcrpropa_1_1Referenced"/>
      </node>
    </collaborationgraph>
    <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" line="24" column="1" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/NuclearDecay.h" bodystart="24" bodyend="64"/>
    <listofallmembers>
      <member refid="classcrpropa_1_1Referenced_1a6ef7442f4d857baf3d3a39fdeec4aadd" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>addReference</name></member>
      <member refid="classcrpropa_1_1NuclearDecay_1ad63e75208c4db9433b5bfe59fdd10287" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>betaDecay</name></member>
      <member refid="classcrpropa_1_1NuclearDecay_1a65dc319e633cf647015bc6f69e9d5a2d" prot="private" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>decayTable</name></member>
      <member refid="classcrpropa_1_1NuclearDecay_1a70ad1d58ac9daf73fe97fbdd0f4820ae" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>gammaEmission</name></member>
      <member refid="classcrpropa_1_1Module_1a9025df426d11cbe30c5500d3ffb5d33c" prot="public" virt="virtual"><scope>crpropa::NuclearDecay</scope><name>getDescription</name></member>
      <member refid="classcrpropa_1_1Referenced_1a74487fc4399bfa67c7251dae5d4247cd" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>getReferenceCount</name></member>
      <member refid="classcrpropa_1_1NuclearDecay_1ac35d80b8cbf88b68698e973eb77185d1" prot="private" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>haveElectrons</name></member>
      <member refid="classcrpropa_1_1NuclearDecay_1a46aa721c91633b8d48f38d79533d6bc6" prot="private" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>haveNeutrinos</name></member>
      <member refid="classcrpropa_1_1NuclearDecay_1aeb2730dc850f214c5a72ec5c17630fb5" prot="private" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>havePhotons</name></member>
      <member refid="classcrpropa_1_1NuclearDecay_1ab6e1fbde91d4eed5fc908aebbe727bef" prot="private" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>limit</name></member>
      <member refid="classcrpropa_1_1NuclearDecay_1a64c2e915dd2c0f318b6c93da9167bebd" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>meanFreePath</name></member>
      <member refid="classcrpropa_1_1Module_1a48d34dc872809277e652493dc3a4746d" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>Module</name></member>
      <member refid="classcrpropa_1_1NuclearDecay_1ab8fb67bd42743f6175aab9a4e90bc92b" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>NuclearDecay</name></member>
      <member refid="classcrpropa_1_1NuclearDecay_1abbe1ed5ae6fe98aa711dbb716a324e4d" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>nucleonEmission</name></member>
      <member refid="classcrpropa_1_1Referenced_1a888be9022b30422e9c6256171d2ddd72" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>operator=</name></member>
      <member refid="classcrpropa_1_1NuclearDecay_1a3c78883ae570810fb93d92793e0ad5ae" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>performInteraction</name></member>
      <member refid="classcrpropa_1_1NuclearDecay_1ab59d2de78ed0589c122df3d6c0478b41" prot="public" virt="virtual"><scope>crpropa::NuclearDecay</scope><name>process</name></member>
      <member refid="classcrpropa_1_1Module_1a9f2321c49330b61a52ce55c2015e4c49" prot="public" virt="non-virtual" ambiguityscope="crpropa::Module::"><scope>crpropa::NuclearDecay</scope><name>process</name></member>
      <member refid="classcrpropa_1_1Referenced_1a391f8e65894afa3547e70d95a589f631" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>Referenced</name></member>
      <member refid="classcrpropa_1_1Referenced_1a8e7407db7805ac439d0c4813bc1860a1" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>Referenced</name></member>
      <member refid="classcrpropa_1_1Referenced_1ab9f5dbbba1431274016b3d74426953f2" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>removeReference</name></member>
      <member refid="classcrpropa_1_1Referenced_1adab41cca5664d4668930f93beefa39b5" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>removeReferenceNoDelete</name></member>
      <member refid="classcrpropa_1_1Module_1a3406b56004afdbe7a1815a541d40de99" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>setDescription</name></member>
      <member refid="classcrpropa_1_1NuclearDecay_1aca5f612cb1c832c1a9fa8e4989efe69a" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>setHaveElectrons</name></member>
      <member refid="classcrpropa_1_1NuclearDecay_1a93dc03a4c252a492642de79f38257821" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>setHaveNeutrinos</name></member>
      <member refid="classcrpropa_1_1NuclearDecay_1a066a49fb07366c030b9403706f83087a" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>setHavePhotons</name></member>
      <member refid="classcrpropa_1_1NuclearDecay_1a29ee54f3ff5603da67762de093cff3b1" prot="public" virt="non-virtual"><scope>crpropa::NuclearDecay</scope><name>setLimit</name></member>
      <member refid="classcrpropa_1_1Module_1a33bac84c3f29d49ffdb4c536cdf1e367" prot="public" virt="virtual"><scope>crpropa::NuclearDecay</scope><name>~Module</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
