<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="namespacecrpropa" kind="namespace" language="C++">
    <compoundname>crpropa</compoundname>
    <innerclass refid="classcrpropa_1_1AbstractAccelerationModule" prot="public">crpropa::AbstractAccelerationModule</innerclass>
    <innerclass refid="classcrpropa_1_1AbstractCondition" prot="public">crpropa::AbstractCondition</innerclass>
    <innerclass refid="classcrpropa_1_1AdiabaticCooling" prot="public">crpropa::AdiabaticCooling</innerclass>
    <innerclass refid="classcrpropa_1_1AdvectionField" prot="public">crpropa::AdvectionField</innerclass>
    <innerclass refid="classcrpropa_1_1AdvectionFieldList" prot="public">crpropa::AdvectionFieldList</innerclass>
    <innerclass refid="classcrpropa_1_1ArchimedeanSpiralField" prot="public">crpropa::ArchimedeanSpiralField</innerclass>
    <innerclass refid="classcrpropa_1_1Base64" prot="public">crpropa::Base64</innerclass>
    <innerclass refid="classcrpropa_1_1BlackbodyPhotonField" prot="public">crpropa::BlackbodyPhotonField</innerclass>
    <innerclass refid="classcrpropa_1_1Candidate" prot="public">crpropa::Candidate</innerclass>
    <innerclass refid="classcrpropa_1_1Clock" prot="public">crpropa::Clock</innerclass>
    <innerclass refid="classcrpropa_1_1CMB" prot="public">crpropa::CMB</innerclass>
    <innerclass refid="classcrpropa_1_1CMZField" prot="public">crpropa::CMZField</innerclass>
    <innerclass refid="classcrpropa_1_1ConstantDensity" prot="public">crpropa::ConstantDensity</innerclass>
    <innerclass refid="classcrpropa_1_1ConstantSphericalAdvectionField" prot="public">crpropa::ConstantSphericalAdvectionField</innerclass>
    <innerclass refid="classcrpropa_1_1Cordes" prot="public">crpropa::Cordes</innerclass>
    <innerclass refid="classcrpropa_1_1CubicBoundary" prot="public">crpropa::CubicBoundary</innerclass>
    <innerclass refid="classcrpropa_1_1CylindricalBoundary" prot="public">crpropa::CylindricalBoundary</innerclass>
    <innerclass refid="classcrpropa_1_1CylindricalProjectionMap" prot="public">crpropa::CylindricalProjectionMap</innerclass>
    <innerclass refid="classcrpropa_1_1Density" prot="public">crpropa::Density</innerclass>
    <innerclass refid="classcrpropa_1_1DensityList" prot="public">crpropa::DensityList</innerclass>
    <innerclass refid="classcrpropa_1_1DetectionLength" prot="public">crpropa::DetectionLength</innerclass>
    <innerclass refid="classcrpropa_1_1DiffusionSDE" prot="public">crpropa::DiffusionSDE</innerclass>
    <innerclass refid="classcrpropa_1_1DirectedFlowOfScatterCenters" prot="public">crpropa::DirectedFlowOfScatterCenters</innerclass>
    <innerclass refid="classcrpropa_1_1DirectedFlowScattering" prot="public">crpropa::DirectedFlowScattering</innerclass>
    <innerclass refid="classcrpropa_1_1ElasticScattering" prot="public">crpropa::ElasticScattering</innerclass>
    <innerclass refid="classcrpropa_1_1ElectronPairProduction" prot="public">crpropa::ElectronPairProduction</innerclass>
    <innerclass refid="classcrpropa_1_1EllipsoidalBoundary" prot="public">crpropa::EllipsoidalBoundary</innerclass>
    <innerclass refid="classcrpropa_1_1EMCascade" prot="public">crpropa::EMCascade</innerclass>
    <innerclass refid="classcrpropa_1_1EMDoublePairProduction" prot="public">crpropa::EMDoublePairProduction</innerclass>
    <innerclass refid="classcrpropa_1_1EMInverseComptonScattering" prot="public">crpropa::EMInverseComptonScattering</innerclass>
    <innerclass refid="classcrpropa_1_1EmissionMap" prot="public">crpropa::EmissionMap</innerclass>
    <innerclass refid="classcrpropa_1_1EmissionMapFiller" prot="public">crpropa::EmissionMapFiller</innerclass>
    <innerclass refid="classcrpropa_1_1EMPairProduction" prot="public">crpropa::EMPairProduction</innerclass>
    <innerclass refid="classcrpropa_1_1EMTripletPairProduction" prot="public">crpropa::EMTripletPairProduction</innerclass>
    <innerclass refid="classcrpropa_1_1Ferriere" prot="public">crpropa::Ferriere</innerclass>
    <innerclass refid="classcrpropa_1_1FutureRedshift" prot="public">crpropa::FutureRedshift</innerclass>
    <innerclass refid="classcrpropa_1_1Grid" prot="public">crpropa::Grid</innerclass>
    <innerclass refid="classcrpropa_1_1GridProperties" prot="public">crpropa::GridProperties</innerclass>
    <innerclass refid="classcrpropa_1_1IRB__Dominguez11" prot="public">crpropa::IRB_Dominguez11</innerclass>
    <innerclass refid="classcrpropa_1_1IRB__Finke10" prot="public">crpropa::IRB_Finke10</innerclass>
    <innerclass refid="classcrpropa_1_1IRB__Franceschini08" prot="public">crpropa::IRB_Franceschini08</innerclass>
    <innerclass refid="classcrpropa_1_1IRB__Gilmore12" prot="public">crpropa::IRB_Gilmore12</innerclass>
    <innerclass refid="classcrpropa_1_1IRB__Kneiske04" prot="public">crpropa::IRB_Kneiske04</innerclass>
    <innerclass refid="classcrpropa_1_1IRB__Stecker05" prot="public">crpropa::IRB_Stecker05</innerclass>
    <innerclass refid="classcrpropa_1_1IRB__Stecker16__lower" prot="public">crpropa::IRB_Stecker16_lower</innerclass>
    <innerclass refid="classcrpropa_1_1IRB__Stecker16__upper" prot="public">crpropa::IRB_Stecker16_upper</innerclass>
    <innerclass refid="classcrpropa_1_1JF12Field" prot="public">crpropa::JF12Field</innerclass>
    <innerclass refid="classcrpropa_1_1JF12FieldSolenoidal" prot="public">crpropa::JF12FieldSolenoidal</innerclass>
    <innerclass refid="classcrpropa_1_1LensPart" prot="public">crpropa::LensPart</innerclass>
    <innerclass refid="classcrpropa_1_1LogarithmicSpiralField" prot="public">crpropa::LogarithmicSpiralField</innerclass>
    <innerclass refid="classcrpropa_1_1MagneticDipoleField" prot="public">crpropa::MagneticDipoleField</innerclass>
    <innerclass refid="classcrpropa_1_1MagneticField" prot="public">crpropa::MagneticField</innerclass>
    <innerclass refid="classcrpropa_1_1MagneticFieldEvolution" prot="public">crpropa::MagneticFieldEvolution</innerclass>
    <innerclass refid="classcrpropa_1_1MagneticFieldGrid" prot="public">crpropa::MagneticFieldGrid</innerclass>
    <innerclass refid="classcrpropa_1_1MagneticFieldList" prot="public">crpropa::MagneticFieldList</innerclass>
    <innerclass refid="classcrpropa_1_1MagneticLens" prot="public">crpropa::MagneticLens</innerclass>
    <innerclass refid="classcrpropa_1_1MaximumTrajectoryLength" prot="public">crpropa::MaximumTrajectoryLength</innerclass>
    <innerclass refid="classcrpropa_1_1MinimumChargeNumber" prot="public">crpropa::MinimumChargeNumber</innerclass>
    <innerclass refid="classcrpropa_1_1MinimumEnergy" prot="public">crpropa::MinimumEnergy</innerclass>
    <innerclass refid="classcrpropa_1_1MinimumEnergyPerParticleId" prot="public">crpropa::MinimumEnergyPerParticleId</innerclass>
    <innerclass refid="classcrpropa_1_1MinimumRedshift" prot="public">crpropa::MinimumRedshift</innerclass>
    <innerclass refid="classcrpropa_1_1MinimumRigidity" prot="public">crpropa::MinimumRigidity</innerclass>
    <innerclass refid="classcrpropa_1_1ModulatedMagneticFieldGrid" prot="public">crpropa::ModulatedMagneticFieldGrid</innerclass>
    <innerclass refid="classcrpropa_1_1Module" prot="public">crpropa::Module</innerclass>
    <innerclass refid="classcrpropa_1_1ModuleList" prot="public">crpropa::ModuleList</innerclass>
    <innerclass refid="classcrpropa_1_1ModuleListRunner" prot="public">crpropa::ModuleListRunner</innerclass>
    <innerclass refid="classcrpropa_1_1Nakanishi" prot="public">crpropa::Nakanishi</innerclass>
    <innerclass refid="classcrpropa_1_1NuclearDecay" prot="public">crpropa::NuclearDecay</innerclass>
    <innerclass refid="classcrpropa_1_1Observer" prot="public">crpropa::Observer</innerclass>
    <innerclass refid="classcrpropa_1_1ObserverDetectAll" prot="public">crpropa::ObserverDetectAll</innerclass>
    <innerclass refid="classcrpropa_1_1ObserverElectronVeto" prot="public">crpropa::ObserverElectronVeto</innerclass>
    <innerclass refid="classcrpropa_1_1ObserverFeature" prot="public">crpropa::ObserverFeature</innerclass>
    <innerclass refid="classcrpropa_1_1ObserverInactiveVeto" prot="public">crpropa::ObserverInactiveVeto</innerclass>
    <innerclass refid="classcrpropa_1_1ObserverLargeSphere" prot="public">crpropa::ObserverLargeSphere</innerclass>
    <innerclass refid="classcrpropa_1_1ObserverNeutrinoVeto" prot="public">crpropa::ObserverNeutrinoVeto</innerclass>
    <innerclass refid="classcrpropa_1_1ObserverNucleusVeto" prot="public">crpropa::ObserverNucleusVeto</innerclass>
    <innerclass refid="classcrpropa_1_1ObserverParticleIdVeto" prot="public">crpropa::ObserverParticleIdVeto</innerclass>
    <innerclass refid="classcrpropa_1_1ObserverPhotonVeto" prot="public">crpropa::ObserverPhotonVeto</innerclass>
    <innerclass refid="classcrpropa_1_1ObserverPoint" prot="public">crpropa::ObserverPoint</innerclass>
    <innerclass refid="classcrpropa_1_1ObserverRedshiftWindow" prot="public">crpropa::ObserverRedshiftWindow</innerclass>
    <innerclass refid="classcrpropa_1_1ObserverSmallSphere" prot="public">crpropa::ObserverSmallSphere</innerclass>
    <innerclass refid="classcrpropa_1_1ObserverSurface" prot="public">crpropa::ObserverSurface</innerclass>
    <innerclass refid="classcrpropa_1_1ObserverTimeEvolution" prot="public">crpropa::ObserverTimeEvolution</innerclass>
    <innerclass refid="classcrpropa_1_1ObserverTracking" prot="public">crpropa::ObserverTracking</innerclass>
    <innerclass refid="classcrpropa_1_1Output" prot="public">crpropa::Output</innerclass>
    <innerclass refid="classcrpropa_1_1ParaxialBox" prot="public">crpropa::ParaxialBox</innerclass>
    <innerclass refid="classcrpropa_1_1ParticleCollector" prot="public">crpropa::ParticleCollector</innerclass>
    <innerclass refid="classcrpropa_1_1ParticleFilter" prot="public">crpropa::ParticleFilter</innerclass>
    <innerclass refid="classcrpropa_1_1ParticleMapsContainer" prot="public">crpropa::ParticleMapsContainer</innerclass>
    <innerclass refid="classcrpropa_1_1ParticleSplitting" prot="public">crpropa::ParticleSplitting</innerclass>
    <innerclass refid="classcrpropa_1_1ParticleState" prot="public">crpropa::ParticleState</innerclass>
    <innerclass refid="classcrpropa_1_1PerformanceModule" prot="public">crpropa::PerformanceModule</innerclass>
    <innerclass refid="classcrpropa_1_1PeriodicBox" prot="public">crpropa::PeriodicBox</innerclass>
    <innerclass refid="classcrpropa_1_1PeriodicMagneticField" prot="public">crpropa::PeriodicMagneticField</innerclass>
    <innerclass refid="classcrpropa_1_1PhotoDisintegration" prot="public">crpropa::PhotoDisintegration</innerclass>
    <innerclass refid="classcrpropa_1_1PhotonEleCa" prot="public">crpropa::PhotonEleCa</innerclass>
    <innerclass refid="classcrpropa_1_1PhotonField" prot="public">crpropa::PhotonField</innerclass>
    <innerclass refid="classcrpropa_1_1PhotonOutput1D" prot="public">crpropa::PhotonOutput1D</innerclass>
    <innerclass refid="classcrpropa_1_1PhotoPionProduction" prot="public">crpropa::PhotoPionProduction</innerclass>
    <innerclass refid="classcrpropa_1_1Pixelization" prot="public">crpropa::Pixelization</innerclass>
    <innerclass refid="classcrpropa_1_1PlanckJF12bField" prot="public">crpropa::PlanckJF12bField</innerclass>
    <innerclass refid="classcrpropa_1_1Plane" prot="public">crpropa::Plane</innerclass>
    <innerclass refid="classcrpropa_1_1PlaneWaveTurbulence" prot="public">crpropa::PlaneWaveTurbulence</innerclass>
    <innerclass refid="classcrpropa_1_1PolarizedSingleModeMagneticField" prot="public">crpropa::PolarizedSingleModeMagneticField</innerclass>
    <innerclass refid="classcrpropa_1_1PropagationBP" prot="public">crpropa::PropagationBP</innerclass>
    <innerclass refid="classcrpropa_1_1PropagationCK" prot="public">crpropa::PropagationCK</innerclass>
    <innerclass refid="classcrpropa_1_1PT11Field" prot="public">crpropa::PT11Field</innerclass>
    <innerclass refid="classcrpropa_1_1QuasiLinearTheory" prot="public">crpropa::QuasiLinearTheory</innerclass>
    <innerclass refid="classcrpropa_1_1Random" prot="public">crpropa::Random</innerclass>
    <innerclass refid="classcrpropa_1_1Redshift" prot="public">crpropa::Redshift</innerclass>
    <innerclass refid="classcrpropa_1_1ref__ptr" prot="public">crpropa::ref_ptr</innerclass>
    <innerclass refid="classcrpropa_1_1Referenced" prot="public">crpropa::Referenced</innerclass>
    <innerclass refid="classcrpropa_1_1ReflectiveBox" prot="public">crpropa::ReflectiveBox</innerclass>
    <innerclass refid="classcrpropa_1_1RestrictToRegion" prot="public">crpropa::RestrictToRegion</innerclass>
    <innerclass refid="classcrpropa_1_1ScalarGrid" prot="public">crpropa::ScalarGrid</innerclass>
    <innerclass refid="classcrpropa_1_1SecondOrderFermi" prot="public">crpropa::SecondOrderFermi</innerclass>
    <innerclass refid="classcrpropa_1_1ShellOutput" prot="public">crpropa::ShellOutput</innerclass>
    <innerclass refid="classcrpropa_1_1ShellOutput1D" prot="public">crpropa::ShellOutput1D</innerclass>
    <innerclass refid="classcrpropa_1_1ShellPropertyOutput" prot="public">crpropa::ShellPropertyOutput</innerclass>
    <innerclass refid="classcrpropa_1_1SimplePropagation" prot="public">crpropa::SimplePropagation</innerclass>
    <innerclass refid="structcrpropa_1_1SophiaEventOutput" prot="public">crpropa::SophiaEventOutput</innerclass>
    <innerclass refid="classcrpropa_1_1Source" prot="public">crpropa::Source</innerclass>
    <innerclass refid="classcrpropa_1_1SourceComposition" prot="public">crpropa::SourceComposition</innerclass>
    <innerclass refid="classcrpropa_1_1SourceDensityGrid" prot="public">crpropa::SourceDensityGrid</innerclass>
    <innerclass refid="classcrpropa_1_1SourceDensityGrid1D" prot="public">crpropa::SourceDensityGrid1D</innerclass>
    <innerclass refid="classcrpropa_1_1SourceDirectedEmission" prot="public">crpropa::SourceDirectedEmission</innerclass>
    <innerclass refid="classcrpropa_1_1SourceDirection" prot="public">crpropa::SourceDirection</innerclass>
    <innerclass refid="classcrpropa_1_1SourceEmissionCone" prot="public">crpropa::SourceEmissionCone</innerclass>
    <innerclass refid="classcrpropa_1_1SourceEmissionMap" prot="public">crpropa::SourceEmissionMap</innerclass>
    <innerclass refid="classcrpropa_1_1SourceEnergy" prot="public">crpropa::SourceEnergy</innerclass>
    <innerclass refid="classcrpropa_1_1SourceFeature" prot="public">crpropa::SourceFeature</innerclass>
    <innerclass refid="classcrpropa_1_1SourceInterface" prot="public">crpropa::SourceInterface</innerclass>
    <innerclass refid="classcrpropa_1_1SourceIsotropicEmission" prot="public">crpropa::SourceIsotropicEmission</innerclass>
    <innerclass refid="classcrpropa_1_1SourceLambertDistributionOnSphere" prot="public">crpropa::SourceLambertDistributionOnSphere</innerclass>
    <innerclass refid="classcrpropa_1_1SourceList" prot="public">crpropa::SourceList</innerclass>
    <innerclass refid="classcrpropa_1_1SourceMultipleParticleTypes" prot="public">crpropa::SourceMultipleParticleTypes</innerclass>
    <innerclass refid="classcrpropa_1_1SourceMultiplePositions" prot="public">crpropa::SourceMultiplePositions</innerclass>
    <innerclass refid="classcrpropa_1_1SourceParticleType" prot="public">crpropa::SourceParticleType</innerclass>
    <innerclass refid="classcrpropa_1_1SourcePosition" prot="public">crpropa::SourcePosition</innerclass>
    <innerclass refid="classcrpropa_1_1SourcePowerLawSpectrum" prot="public">crpropa::SourcePowerLawSpectrum</innerclass>
    <innerclass refid="classcrpropa_1_1SourcePulsarDistribution" prot="public">crpropa::SourcePulsarDistribution</innerclass>
    <innerclass refid="classcrpropa_1_1SourceRedshift" prot="public">crpropa::SourceRedshift</innerclass>
    <innerclass refid="classcrpropa_1_1SourceRedshift1D" prot="public">crpropa::SourceRedshift1D</innerclass>
    <innerclass refid="classcrpropa_1_1SourceRedshiftEvolution" prot="public">crpropa::SourceRedshiftEvolution</innerclass>
    <innerclass refid="classcrpropa_1_1SourceSNRDistribution" prot="public">crpropa::SourceSNRDistribution</innerclass>
    <innerclass refid="classcrpropa_1_1SourceUniform1D" prot="public">crpropa::SourceUniform1D</innerclass>
    <innerclass refid="classcrpropa_1_1SourceUniformBox" prot="public">crpropa::SourceUniformBox</innerclass>
    <innerclass refid="classcrpropa_1_1SourceUniformCylinder" prot="public">crpropa::SourceUniformCylinder</innerclass>
    <innerclass refid="classcrpropa_1_1SourceUniformHollowSphere" prot="public">crpropa::SourceUniformHollowSphere</innerclass>
    <innerclass refid="classcrpropa_1_1SourceUniformRedshift" prot="public">crpropa::SourceUniformRedshift</innerclass>
    <innerclass refid="classcrpropa_1_1SourceUniformShell" prot="public">crpropa::SourceUniformShell</innerclass>
    <innerclass refid="classcrpropa_1_1SourceUniformSphere" prot="public">crpropa::SourceUniformSphere</innerclass>
    <innerclass refid="classcrpropa_1_1Sphere" prot="public">crpropa::Sphere</innerclass>
    <innerclass refid="classcrpropa_1_1SphericalAdvectionField" prot="public">crpropa::SphericalAdvectionField</innerclass>
    <innerclass refid="classcrpropa_1_1SphericalAdvectionShock" prot="public">crpropa::SphericalAdvectionShock</innerclass>
    <innerclass refid="classcrpropa_1_1SphericalBoundary" prot="public">crpropa::SphericalBoundary</innerclass>
    <innerclass refid="classcrpropa_1_1StepLengthModifier" prot="public">crpropa::StepLengthModifier</innerclass>
    <innerclass refid="classcrpropa_1_1Surface" prot="public">crpropa::Surface</innerclass>
    <innerclass refid="classcrpropa_1_1SynchrotronRadiation" prot="public">crpropa::SynchrotronRadiation</innerclass>
    <innerclass refid="classcrpropa_1_1TabularPhotonField" prot="public">crpropa::TabularPhotonField</innerclass>
    <innerclass refid="classcrpropa_1_1TextOutput" prot="public">crpropa::TextOutput</innerclass>
    <innerclass refid="classcrpropa_1_1TF17Field" prot="public">crpropa::TF17Field</innerclass>
    <innerclass refid="classcrpropa_1_1TorroidalHaloField" prot="public">crpropa::TorroidalHaloField</innerclass>
    <innerclass refid="classcrpropa_1_1TurbulenceSpectrum" prot="public">crpropa::TurbulenceSpectrum</innerclass>
    <innerclass refid="classcrpropa_1_1TurbulentField" prot="public">crpropa::TurbulentField</innerclass>
    <innerclass refid="classcrpropa_1_1UniformAdvectionField" prot="public">crpropa::UniformAdvectionField</innerclass>
    <innerclass refid="classcrpropa_1_1UniformMagneticField" prot="public">crpropa::UniformMagneticField</innerclass>
    <innerclass refid="classcrpropa_1_1URB__Fixsen11" prot="public">crpropa::URB_Fixsen11</innerclass>
    <innerclass refid="classcrpropa_1_1URB__Nitu21" prot="public">crpropa::URB_Nitu21</innerclass>
    <innerclass refid="classcrpropa_1_1URB__Protheroe96" prot="public">crpropa::URB_Protheroe96</innerclass>
    <innerclass refid="classcrpropa_1_1Variant" prot="public">crpropa::Variant</innerclass>
    <innerclass refid="classcrpropa_1_1Vector3" prot="public">crpropa::Vector3</innerclass>
    <innerclass refid="classcrpropa_1_1VectorGrid" prot="public">crpropa::VectorGrid</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacecrpropa_1aa197adf50cede38157e51842d7a713f8" prot="public" static="no" strong="no">
        <type></type>
        <name>interpolationType</name>
        <enumvalue id="namespacecrpropa_1aa197adf50cede38157e51842d7a713f8a0e9bafc1409f7e9077dd204e3c1bc3ce" prot="public">
          <name>TRILINEAR</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacecrpropa_1aa197adf50cede38157e51842d7a713f8ab0a7c9dcb550b08620084f748a7c6add" prot="public">
          <name>TRICUBIC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacecrpropa_1aa197adf50cede38157e51842d7a713f8aa0a6d23f8b8412b029f415a9ebbac3cf" prot="public">
          <name>NEAREST_NEIGHBOUR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If set to TRILINEAR, use trilinear interpolation (standard) If set to TRICUBIC, use tricubic interpolation instead of trilinear interpolation If set to NEAREST_NEIGHBOUR , use nearest neighbour interpolation instead of trilinear interpolation </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" line="22" column="1" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" bodystart="22" bodyend="26"/>
      </memberdef>
      <memberdef kind="enum" id="namespacecrpropa_1af7513ac77cc27dbf612a5e0690c82c4c" prot="public" static="no" strong="yes">
        <type></type>
        <name>TF17DiskModel</name>
        <enumvalue id="namespacecrpropa_1af7513ac77cc27dbf612a5e0690c82c4caf37f735445063e9f915c3cd97b0b9c43" prot="public">
          <name>Ad1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacecrpropa_1af7513ac77cc27dbf612a5e0690c82c4cabfb76ad7e53fe7dbe2fa0c3158936883" prot="public">
          <name>Bd1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacecrpropa_1af7513ac77cc27dbf612a5e0690c82c4ca3fe01f6080482b1437d70fb27f0a6f04" prot="public">
          <name>Dd1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticField/TF17Field.h" line="20" column="1" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticField/TF17Field.h" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="enum" id="namespacecrpropa_1aafad8b2c308adeb57af2612eed384fb5" prot="public" static="no" strong="yes">
        <type></type>
        <name>TF17HaloModel</name>
        <enumvalue id="namespacecrpropa_1aafad8b2c308adeb57af2612eed384fb5a9c5959e6f08f10d0edbadf5be1f33c53" prot="public">
          <name>C0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacecrpropa_1aafad8b2c308adeb57af2612eed384fb5a1a2ddc2db4693cfd16d534cde5572cc1" prot="public">
          <name>C1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticField/TF17Field.h" line="21" column="1" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticField/TF17Field.h" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="enum" id="namespacecrpropa_1a025791393b56feb9a61c13b1d7eeafd5" prot="public" static="no" strong="no">
        <type></type>
        <name>DetectionState</name>
        <enumvalue id="namespacecrpropa_1a025791393b56feb9a61c13b1d7eeafd5ad3560fe9fd615b5d3177bb08444bbe91" prot="public">
          <name>DETECTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacecrpropa_1a025791393b56feb9a61c13b1d7eeafd5a3ad067cbe28208f8f0c611a220fbb091" prot="public">
          <name>VETO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacecrpropa_1a025791393b56feb9a61c13b1d7eeafd5acfe24a7b308a82835c8a9a9a89bc4ca2" prot="public">
          <name>NOTHING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" line="17" column="1" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" bodystart="17" bodyend="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__Core_1gaa4f8aec71606a16ed58c4f16efaabb23" prot="public" static="no">
        <type><ref refid="classcrpropa_1_1Grid" kindref="compound">Grid</ref>&lt; <ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3f</ref> &gt;</type>
        <definition>typedef Grid&lt;Vector3f&gt; Grid3f</definition>
        <argsstring></argsstring>
        <name>Grid3f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" line="522" column="14" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" bodystart="522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__Core_1gace03eaf2fd573de2d84e3aebf60fd729" prot="public" static="no">
        <type><ref refid="classcrpropa_1_1Grid" kindref="compound">Grid</ref>&lt; <ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref> &gt;</type>
        <definition>typedef Grid&lt;Vector3d&gt; Grid3d</definition>
        <argsstring></argsstring>
        <name>Grid3d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" line="523" column="14" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" bodystart="523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__Core_1ga618737687b6e91f66fe1f4da1134e925" prot="public" static="no">
        <type><ref refid="classcrpropa_1_1Grid" kindref="compound">Grid</ref>&lt; float &gt;</type>
        <definition>typedef Grid&lt;float&gt; Grid1f</definition>
        <argsstring></argsstring>
        <name>Grid1f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" line="524" column="14" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" bodystart="524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__Core_1gad761d09abe25f824acac027b04dd1507" prot="public" static="no">
        <type><ref refid="classcrpropa_1_1Grid" kindref="compound">Grid</ref>&lt; double &gt;</type>
        <definition>typedef Grid&lt;double&gt; Grid1d</definition>
        <argsstring></argsstring>
        <name>Grid1d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" line="525" column="14" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" bodystart="525" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacecrpropa_1af135df255ba94df054e3289a0526f3b3" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classcrpropa_1_1LensPart" kindref="compound">LensPart</ref> * &gt;::iterator</type>
        <definition>typedef std::vector&lt;LensPart*&gt;::iterator LensPartIter</definition>
        <argsstring></argsstring>
        <name>LensPartIter</name>
        <briefdescription>
<para>Function to calculate the mean deflection [rad] of the matrix M, given a pixelization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/MagneticLens.h" line="137" column="32" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/MagneticLens.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacecrpropa_1ad47ce08e957c3542cd0715bc2e933293" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classcrpropa_1_1LensPart" kindref="compound">LensPart</ref> * &gt;::const_iterator</type>
        <definition>typedef std::vector&lt;LensPart*&gt;::const_iterator const_LensPartIter</definition>
        <argsstring></argsstring>
        <name>const_LensPartIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/MagneticLens.h" line="138" column="38" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/MagneticLens.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacecrpropa_1afdeae388527922b41dd13abc77ffdb59" prot="public" static="no">
        <type>Eigen::SparseMatrix&lt; double &gt;</type>
        <definition>typedef Eigen::SparseMatrix&lt;double&gt; ModelMatrixType</definition>
        <argsstring></argsstring>
        <name>ModelMatrixType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" line="44" column="29" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacecrpropa_1a38b820ffe798c468ff6cf1b15efad830" prot="public" static="no">
        <type>Eigen::SparseVector&lt; double &gt;</type>
        <definition>typedef Eigen::SparseVector&lt;double&gt; ModelVectorType</definition>
        <argsstring></argsstring>
        <name>ModelVectorType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" line="45" column="29" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__Core_1ga1f05093f5ee1a9ecdd54476792e4c206" prot="public" static="no">
        <type><ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3</ref>&lt; double &gt;</type>
        <definition>typedef Vector3&lt;double&gt; Vector3d</definition>
        <argsstring></argsstring>
        <name>Vector3d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Vector3.h" line="432" column="17" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Vector3.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__Core_1gaf345ad77ba5e240c7ab72b4b2077e754" prot="public" static="no">
        <type><ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3</ref>&lt; float &gt;</type>
        <definition>typedef Vector3&lt;float&gt; Vector3f</definition>
        <argsstring></argsstring>
        <name>Vector3f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Vector3.h" line="433" column="17" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Vector3.h" bodystart="433" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacecrpropa_1ae0e636b5119e31607138675be292cf2c" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double X[8]</definition>
        <argsstring>[8]</argsstring>
        <name>X</name>
        <initializer>= {.0950125098, .2816035507, .4580167776, .6178762444, .7554044083, .8656312023, .9445750230, .9894009349}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" line="71" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacecrpropa_1a43779031bbc6e102be279b8702c5eef5" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double W[8]</definition>
        <argsstring>[8]</argsstring>
        <name>W</name>
        <initializer>= {.1894506104, .1826034150, .1691565193, .1495959888, .1246289712, .0951585116, .0622535239, .0271524594}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" line="72" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MagneticLenses_1gae5e279b73f61763edc7d0651e38e481d" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t _nOrder_max</definition>
        <argsstring></argsstring>
        <name>_nOrder_max</name>
        <initializer>= 13</initializer>
        <briefdescription>
<para>Helpers to makes work with Healpix smooth. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/Pixelization.h" line="39" column="15" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/Pixelization.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MagneticLenses_1ga3e6fb5fa38bb69d9a6852cf2e0d97437" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t _nPix[]</definition>
        <argsstring>[]</argsstring>
        <name>_nPix</name>
        <initializer>=
{
		48,
		192,
		768,
		3072,
		12288,
		49152,
		196608,
		786432,
		3145728,
		12582912,
		50331648,
		201326592,
		805306368
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/Pixelization.h" line="40" column="16" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/Pixelization.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga81230fc213736db75d5c970e68886a10" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double meter</definition>
        <argsstring></argsstring>
        <name>meter</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="25" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga4e6001382c137dd906faab8f49a0a219" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double second</definition>
        <argsstring></argsstring>
        <name>second</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="26" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga8955be82c3d643afe27de76d06df52e8" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double kilogram</definition>
        <argsstring></argsstring>
        <name>kilogram</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="27" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gaa772c1c559fd8275f62df4628594c14c" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double ampere</definition>
        <argsstring></argsstring>
        <name>ampere</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="28" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gaabefcc198b3e2606497fd55b370846fa" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double mol</definition>
        <argsstring></argsstring>
        <name>mol</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="29" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gad6635fb9b9ed7cc9fee15071b9432091" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double kelvin</definition>
        <argsstring></argsstring>
        <name>kelvin</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="30" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga86cabed6b39944d7bada06028f98c864" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double newton</definition>
        <argsstring></argsstring>
        <name>newton</name>
        <initializer>= 1 * kilogram * meter / second / second</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="33" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gaab6215c4cb38b8fcb808d8ff11e0940c" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double pascal</definition>
        <argsstring></argsstring>
        <name>pascal</name>
        <initializer>= 1 * newton / meter / meter</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="34" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gaca2a407ebab577eb092585f84631c8d0" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double joule</definition>
        <argsstring></argsstring>
        <name>joule</name>
        <initializer>= 1 * newton * meter</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="35" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga2ec29f0d0bb0bdf93d5e4d1663eebd9a" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double tesla</definition>
        <argsstring></argsstring>
        <name>tesla</name>
        <initializer>= 1 * newton / ampere / meter</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="36" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga90ad310c0986c21c31d3695d97922db7" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double volt</definition>
        <argsstring></argsstring>
        <name>volt</name>
        <initializer>= 1 * kilogram * meter * meter / ampere / second / second / second</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="37" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga9f729835f8d7ddb8ab71fce2108d7566" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double coulomb</definition>
        <argsstring></argsstring>
        <name>coulomb</name>
        <initializer>= 1 * ampere * second</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="38" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga1f940bb86795ed45e1417ad32321a551" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double hertz</definition>
        <argsstring></argsstring>
        <name>hertz</name>
        <initializer>= 1 / second</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="39" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga509c941bf1649360f649fda481fa10f0" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double rad</definition>
        <argsstring></argsstring>
        <name>rad</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="40" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga2f5042227e4fdba943844e169f5cf010" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double deg</definition>
        <argsstring></argsstring>
        <name>deg</name>
        <initializer>= M_PI / 180.</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="41" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gad9f87532fe6bac146c75ef173bd468d8" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double yocto</definition>
        <argsstring></argsstring>
        <name>yocto</name>
        <initializer>= 1E-24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="44" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gaecd7702608529a1c8d8c744542b64bd4" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double zepto</definition>
        <argsstring></argsstring>
        <name>zepto</name>
        <initializer>= 1E-21</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="45" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga5014cfb8c7422235fb7a8e549e29284d" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double atto</definition>
        <argsstring></argsstring>
        <name>atto</name>
        <initializer>= 1E-18</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="46" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gabea2135256ac31f26ed041ab577f8c13" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double femto</definition>
        <argsstring></argsstring>
        <name>femto</name>
        <initializer>= 1E-15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="47" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gac6aff7a2b743abc2a58df8e7b34470d8" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double pico</definition>
        <argsstring></argsstring>
        <name>pico</name>
        <initializer>= 1E-12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="48" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gac6aa1e9406f8b758f5e41d80e0045733" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double nano</definition>
        <argsstring></argsstring>
        <name>nano</name>
        <initializer>= 1E-9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="49" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga9edb08003fe77ed3bacd9ea23bcfa66b" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double micro</definition>
        <argsstring></argsstring>
        <name>micro</name>
        <initializer>= 1E-6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="50" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga795961ce904cb279d5fd18b27622c9a0" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double milli</definition>
        <argsstring></argsstring>
        <name>milli</name>
        <initializer>= 1E-3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="51" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga05ccc8bd868280980dab40ca4128d8e4" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double kilo</definition>
        <argsstring></argsstring>
        <name>kilo</name>
        <initializer>= 1E3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="53" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga8912b14f7b302e534e7eb063288f6ee9" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double mega</definition>
        <argsstring></argsstring>
        <name>mega</name>
        <initializer>= 1E6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="54" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gaf2299d510cc08e636439584682a88303" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double giga</definition>
        <argsstring></argsstring>
        <name>giga</name>
        <initializer>= 1E9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="55" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga601bd967274470accc5c479bf1a991ce" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double tera</definition>
        <argsstring></argsstring>
        <name>tera</name>
        <initializer>= 1E12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="56" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gab4e48de47138d9b3db5a04e1a3d6be1d" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double peta</definition>
        <argsstring></argsstring>
        <name>peta</name>
        <initializer>= 1E15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="57" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga7f1280863986e5f4b59fae29afbecabc" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double exa</definition>
        <argsstring></argsstring>
        <name>exa</name>
        <initializer>= 1E18</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="58" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gad92d24cec8d208c82569e29279becc10" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double zetta</definition>
        <argsstring></argsstring>
        <name>zetta</name>
        <initializer>= 1E21</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="59" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga85979a8ef8dbc332c635191cd40a3b0c" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double yotta</definition>
        <argsstring></argsstring>
        <name>yotta</name>
        <initializer>= 1E24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="60" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga53b77492aea234537215b9ba7177882c" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double eplus</definition>
        <argsstring></argsstring>
        <name>eplus</name>
        <initializer>= 1.602176487e-19 * ampere * second</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="64" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga2085cc4cdb90e7a156b5dbdbe44bf7aa" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double c_light</definition>
        <argsstring></argsstring>
        <name>c_light</name>
        <initializer>= 2.99792458e8 * meter / second</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="65" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga35d305b22a8de1cab9f18bf3e0fe48ba" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double c_squared</definition>
        <argsstring></argsstring>
        <name>c_squared</name>
        <initializer>= c_light * c_light</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="66" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga0595e59a9bf296545e5ab563066df679" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double amu</definition>
        <argsstring></argsstring>
        <name>amu</name>
        <initializer>= 1.660538921e-27 * kilogram</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="67" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gaf5068a3fc840800f912a14e09c4777ff" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double mass_proton</definition>
        <argsstring></argsstring>
        <name>mass_proton</name>
        <initializer>= 1.67262158e-27 * kilogram</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="68" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga1d1f8f060a1f4657bafdd7065b01d943" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double mass_neutron</definition>
        <argsstring></argsstring>
        <name>mass_neutron</name>
        <initializer>= 1.67492735e-27 * kilogram</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="69" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga21aa8093ee2f43ed4e85b31b64304c7a" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double mass_electron</definition>
        <argsstring></argsstring>
        <name>mass_electron</name>
        <initializer>= 9.10938291e-31 * kilogram</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="70" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga5625ec9f520a5f041fb88f5da5f94bef" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double h_planck</definition>
        <argsstring></argsstring>
        <name>h_planck</name>
        <initializer>= 6.62606957e-34 * joule * second</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="71" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga12088648de7f88c5accd233032d3153e" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double k_boltzmann</definition>
        <argsstring></argsstring>
        <name>k_boltzmann</name>
        <initializer>= 1.3806488e-23 * joule / kelvin</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="72" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gaa2940cb38b48f36a88341bd268778847" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double mu0</definition>
        <argsstring></argsstring>
        <name>mu0</name>
        <initializer>= 4 * M_PI * 1e-7 * newton / ampere / ampere</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="73" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gab38b15c5eece78fad9d84103d8b90a89" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double epsilon0</definition>
        <argsstring></argsstring>
        <name>epsilon0</name>
        <initializer>= 1.0 / mu0 / c_squared * ampere * second / volt / meter</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="74" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gad7c4f80eaae50061ac4b754cbb5f0275" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double gauss</definition>
        <argsstring></argsstring>
        <name>gauss</name>
        <initializer>= 1e-4 * tesla</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="77" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gab70342abf0832b9dd265964c21681319" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double microgauss</definition>
        <argsstring></argsstring>
        <name>microgauss</name>
        <initializer>= 1e-6 * gauss</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="78" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gab676ddbbf379cc0ee93944717e1ac9eb" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double nanogauss</definition>
        <argsstring></argsstring>
        <name>nanogauss</name>
        <initializer>= 1e-9 * gauss</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="79" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga5596cdaf7a42ba58794c2c6dc5e1e7dd" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double muG</definition>
        <argsstring></argsstring>
        <name>muG</name>
        <initializer>= microgauss</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="80" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gab2255fb9f970de1ddc40b38fe9065de4" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double nG</definition>
        <argsstring></argsstring>
        <name>nG</name>
        <initializer>= nanogauss</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="81" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga8d678b199c22b3f6719333b6ed3b3e39" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double erg</definition>
        <argsstring></argsstring>
        <name>erg</name>
        <initializer>= 1E-7 * joule</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="83" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga384bc54c9a15fa0d84ae78416653c9c4" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double electronvolt</definition>
        <argsstring></argsstring>
        <name>electronvolt</name>
        <initializer>= eplus * volt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="86" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga2e4f006f78ed12d318baa9ef08a9e799" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double kiloelectronvolt</definition>
        <argsstring></argsstring>
        <name>kiloelectronvolt</name>
        <initializer>= 1e3 * electronvolt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="87" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga4f2c7d727d45a6c6a39e648c48a68bf4" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double megaelectronvolt</definition>
        <argsstring></argsstring>
        <name>megaelectronvolt</name>
        <initializer>= 1e6 * electronvolt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="88" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga67f77928286c0c47c56fb64ef6445517" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double gigaelectronvolt</definition>
        <argsstring></argsstring>
        <name>gigaelectronvolt</name>
        <initializer>= 1e9 * electronvolt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="89" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga6591214065a17f6977e05807be74db81" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double teraelectronvolt</definition>
        <argsstring></argsstring>
        <name>teraelectronvolt</name>
        <initializer>= 1e12 * electronvolt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="90" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gaea037b37e9acec1a6e766802f3ebd7fb" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double petaelectronvolt</definition>
        <argsstring></argsstring>
        <name>petaelectronvolt</name>
        <initializer>= 1e15 * electronvolt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="91" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga4aa592dff0d55ae915648a03dfe46dd1" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double exaelectronvolt</definition>
        <argsstring></argsstring>
        <name>exaelectronvolt</name>
        <initializer>= 1e18 * electronvolt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="92" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga87b385f118e3715860117a77eda7136d" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double eV</definition>
        <argsstring></argsstring>
        <name>eV</name>
        <initializer>= electronvolt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="93" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga71187dfc8f158326cbf7bed526138aae" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double keV</definition>
        <argsstring></argsstring>
        <name>keV</name>
        <initializer>= kiloelectronvolt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="94" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gac90e720c4654493ae50b7b964cc6b20d" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double MeV</definition>
        <argsstring></argsstring>
        <name>MeV</name>
        <initializer>= megaelectronvolt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="95" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gaec0e126d9991db8ad0b26139f5860568" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double GeV</definition>
        <argsstring></argsstring>
        <name>GeV</name>
        <initializer>= gigaelectronvolt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="96" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga7f801e1f6821bc6baf0652ed2496e5e9" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double TeV</definition>
        <argsstring></argsstring>
        <name>TeV</name>
        <initializer>= teraelectronvolt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="97" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga463540ec70967dcc4e597ef8adc7f44c" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double PeV</definition>
        <argsstring></argsstring>
        <name>PeV</name>
        <initializer>= petaelectronvolt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="98" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gab1e9216cf93077db4901e1820dffa132" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double EeV</definition>
        <argsstring></argsstring>
        <name>EeV</name>
        <initializer>= exaelectronvolt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="99" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga8d9a59356bad97a6e73cc459a35bc274" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double barn</definition>
        <argsstring></argsstring>
        <name>barn</name>
        <initializer>= 1E-28 * meter * meter</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="101" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gae57f427be881e4c8f1163470da1befb2" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double au</definition>
        <argsstring></argsstring>
        <name>au</name>
        <initializer>= 149597870700 * meter</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="104" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gaaa1e0123e1baad493ec687904a428cbf" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double ly</definition>
        <argsstring></argsstring>
        <name>ly</name>
        <initializer>= 365.25 * 24 * 3600 * second * c_light</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="105" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gadbbb3073e1b8a1b9fd72a488dc7abefa" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double parsec</definition>
        <argsstring></argsstring>
        <name>parsec</name>
        <initializer>= 648000 / M_PI * au</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="106" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga0470d2bb7af674e93def309564e0d51a" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double kiloparsec</definition>
        <argsstring></argsstring>
        <name>kiloparsec</name>
        <initializer>= 1e3 * parsec</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="107" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gac3da9c52caabd55b3d229735cc925e5e" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double megaparsec</definition>
        <argsstring></argsstring>
        <name>megaparsec</name>
        <initializer>= 1e6 * parsec</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="108" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gaf8524dd93cb2df63eabbbd443e5014ff" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double gigaparsec</definition>
        <argsstring></argsstring>
        <name>gigaparsec</name>
        <initializer>= 1e9 * parsec</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="109" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga2884cd030c4c825754349a525a1d06ce" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double pc</definition>
        <argsstring></argsstring>
        <name>pc</name>
        <initializer>= parsec</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="110" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga1ec6fd9219412d45c0565c29304d5184" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double kpc</definition>
        <argsstring></argsstring>
        <name>kpc</name>
        <initializer>= kiloparsec</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="111" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga03be4183d6f731898634e3649865848c" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double Mpc</definition>
        <argsstring></argsstring>
        <name>Mpc</name>
        <initializer>= megaparsec</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="112" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gaaf33764feb34669b8ffe006cc943067d" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double Gpc</definition>
        <argsstring></argsstring>
        <name>Gpc</name>
        <initializer>= gigaparsec</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="113" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga6183103d0e243ef4347cd071cc5fd68b" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double kilometer</definition>
        <argsstring></argsstring>
        <name>kilometer</name>
        <initializer>= 1000 * meter</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="116" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga8b99ed3101c591c1133f492d94fa3685" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double centimeter</definition>
        <argsstring></argsstring>
        <name>centimeter</name>
        <initializer>= 0.01 * meter</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="117" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gaaf85ed8b741937db702f62aac693ae5d" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double km</definition>
        <argsstring></argsstring>
        <name>km</name>
        <initializer>= kilometer</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="118" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gad0b9a58075a15c1cb674a2b879402853" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double cm</definition>
        <argsstring></argsstring>
        <name>cm</name>
        <initializer>= centimeter</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="119" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gab1ad77ec7ae37ba36c2c7f8785440281" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double nanosecond</definition>
        <argsstring></argsstring>
        <name>nanosecond</name>
        <initializer>= 1e-9 * second</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="122" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga33252a2d991e1b089ea0c7540ef334ea" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double microsecond</definition>
        <argsstring></argsstring>
        <name>microsecond</name>
        <initializer>= 1e-6 * second</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="123" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gae32c5b1394299598268f59e850e70d91" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double millisecond</definition>
        <argsstring></argsstring>
        <name>millisecond</name>
        <initializer>= 1e-3 * second</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="124" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga583f186218b8bf2ad5c54928a6c20134" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double minute</definition>
        <argsstring></argsstring>
        <name>minute</name>
        <initializer>= 60 * second</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="125" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga09c047eba91ce1d85e4e7fdd4bafebe4" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double hour</definition>
        <argsstring></argsstring>
        <name>hour</name>
        <initializer>= 3600 * second</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="126" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1gae9508134491d8a9621d23f07281096c7" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double ns</definition>
        <argsstring></argsstring>
        <name>ns</name>
        <initializer>= nanosecond</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="127" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga38012ba2795f7181e87ea3a4a0b0e32f" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double mus</definition>
        <argsstring></argsstring>
        <name>mus</name>
        <initializer>= microsecond</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="128" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga40448747ca0606885ccc70b72ed78001" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double ms</definition>
        <argsstring></argsstring>
        <name>ms</name>
        <initializer>= millisecond</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="129" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga775a3e65279359fb2b464f0aedc383f1" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double sec</definition>
        <argsstring></argsstring>
        <name>sec</name>
        <initializer>= second</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="130" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PhysicsDefinitions_1ga9c4fc0db13341889d27441fd36da13c5" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double ccm</definition>
        <argsstring></argsstring>
        <name>ccm</name>
        <initializer>= cm*cm*cm</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" line="133" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Units.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__Core_1ga1df13d495273a79e3350f157af7b4ea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string crpropa::getDataPath</definition>
        <argsstring>(std::string filename)</argsstring>
        <name>getDataPath</name>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" line="18" column="13" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" declline="18" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1gafaaaa2733a31f763ffd1fa28bfab81ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string crpropa::getInstallPrefix</definition>
        <argsstring>()</argsstring>
        <name>getInstallPrefix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" line="21" column="13" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" declline="21" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga0f0f1fbfd43cc9a796d65bf1beeaa6e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int crpropa::digit</definition>
        <argsstring>(const int &amp;value, const int &amp;d)</argsstring>
        <name>digit</name>
        <param>
          <type>const int &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" line="24" column="12" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1gaea966817d7679bb00bd12e22135184fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T crpropa::clip</definition>
        <argsstring>(const T &amp;x, const T &amp;lower, const T &amp;upper)</argsstring>
        <name>clip</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" line="30" column="3" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga3ea9c7bef53d02cb7a867c72182768b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::interpolate</definition>
        <argsstring>(double x, const std::vector&lt; double &gt; &amp;X, const std::vector&lt; double &gt; &amp;Y)</argsstring>
        <name>interpolate</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>Y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" line="36" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" declline="36" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1gab28d821e32f177c9c1d1e3658796f259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::interpolate2d</definition>
        <argsstring>(double x, double y, const std::vector&lt; double &gt; &amp;X, const std::vector&lt; double &gt; &amp;Y, const std::vector&lt; double &gt; &amp;Z)</argsstring>
        <name>interpolate2d</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>Z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" line="42" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" declline="42" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga45ce85dc4b25887b2c527719c7531b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::interpolateEquidistant</definition>
        <argsstring>(double x, double lo, double hi, const std::vector&lt; double &gt; &amp;Y)</argsstring>
        <name>interpolateEquidistant</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hi</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>Y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" line="47" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" declline="47" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1gaecc325fd115bd796f3c0e77cb689ebae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t crpropa::closestIndex</definition>
        <argsstring>(double x, const std::vector&lt; double &gt; &amp;X)</argsstring>
        <name>closestIndex</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" line="51" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" declline="51" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1a84149e2a416af8480e9d992cbd1eed95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>exponent</declname>
            <defname>exponent</defname>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double crpropa::pow_integer</definition>
        <argsstring>(double base)</argsstring>
        <name>pow_integer</name>
        <param>
          <type>double</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" line="58" column="15" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1af4fe3bfea48d26d7e167c0129dc277cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>double</type>
        <definition>double crpropa::pow_integer&lt; 0 &gt;</definition>
        <argsstring>(double base)</argsstring>
        <name>pow_integer&lt; 0 &gt;</name>
        <param>
          <type>double</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" line="64" column="8" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1a7b2c3263f63a99e6ed493fb1848a8ff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Integrand</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double crpropa::gaussInt</definition>
        <argsstring>(Integrand &amp;&amp;integrand, double A, double B)</argsstring>
        <name>gaussInt</name>
        <param>
          <type>Integrand &amp;&amp;</type>
          <declname>integrand</declname>
        </param>
        <param>
          <type>double</type>
          <declname>A</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" line="74" column="8" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Common.h" bodystart="74" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1gaf26fcc97f8c2cd7b6613950265dbd473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::setCosmologyParameters</definition>
        <argsstring>(double hubbleParameter, double omegaMatter)</argsstring>
        <name>setCosmologyParameters</name>
        <param>
          <type>double</type>
          <declname>hubbleParameter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>omegaMatter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the cosmological parameters for a flat universe. To ensure flatness omegaL is set to 1 - omegaMatter <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hubbleParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensionless Hubble parameter, default = 0.673 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>omegaMatter</parametername>
</parameternamelist>
<parameterdescription>
<para>matter parameter, default = 0.315 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" line="20" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" declline="20" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1gaca47de327745e542b987dc0fdc0544ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::hubbleRate</definition>
        <argsstring>(double redshift=0)</argsstring>
        <name>hubbleRate</name>
        <param>
          <type>double</type>
          <declname>redshift</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hubble rate at given redshift H(z) = H0 * sqrt(omegaM * (1 + z)^3 + omegaL) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" line="26" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" declline="26" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1ga73ed5eab2ffc8064c0cb8f169d568a07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::omegaL</definition>
        <argsstring>()</argsstring>
        <name>omegaL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" line="29" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" declline="29" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1gac97a929f7aaea9e4a346e319167d05fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::omegaM</definition>
        <argsstring>()</argsstring>
        <name>omegaM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" line="32" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" declline="32" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1ga6fccfc5a896dc6f1036d2abbfca4ae2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::H0</definition>
        <argsstring>()</argsstring>
        <name>H0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" line="35" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" declline="35" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1ga512961b323c6706458df15e5c11f09fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::comovingDistance2Redshift</definition>
        <argsstring>(double distance)</argsstring>
        <name>comovingDistance2Redshift</name>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classcrpropa_1_1Redshift" kindref="compound">Redshift</ref> of a comoving object at a given comoving distance to an observer at z = 0. d_comoving(z) = c/H0 * int_0^z dz&apos; / E(z&apos;) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" line="41" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" declline="41" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1ga74be55ec3e23caff21310b51b53cab35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::redshift2ComovingDistance</definition>
        <argsstring>(double redshift)</argsstring>
        <name>redshift2ComovingDistance</name>
        <param>
          <type>double</type>
          <declname>redshift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Comoving distance between an observer at z = 0 and a comoving object at z. d_comoving(z) = c/H0 * int_0^z dz&apos; / E(z&apos;) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" line="47" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" declline="47" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1gafe272632098a27755f88a8503e04481f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::luminosityDistance2Redshift</definition>
        <argsstring>(double distance)</argsstring>
        <name>luminosityDistance2Redshift</name>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classcrpropa_1_1Redshift" kindref="compound">Redshift</ref> of a comoving object at a given luminosity distance to an observer at z = 0. d_luminosity(z) = (1 + z) * d_comoving(z) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" line="53" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" declline="53" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1ga21044b6b8dc8baa6bc0d62296b5be92c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::redshift2LuminosityDistance</definition>
        <argsstring>(double redshift)</argsstring>
        <name>redshift2LuminosityDistance</name>
        <param>
          <type>double</type>
          <declname>redshift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Luminosity distance between an observer at z = 0 and a comoving object at z. d_luminosity(z) = (1 + z) * d_comoving(z) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" line="59" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" declline="59" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1ga203d7d59dabadfa6e77a05263f77c819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::lightTravelDistance2Redshift</definition>
        <argsstring>(double distance)</argsstring>
        <name>lightTravelDistance2Redshift</name>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classcrpropa_1_1Redshift" kindref="compound">Redshift</ref> of a comoving object at a given light travel distance to an observer at z = 0. d_lighttravel(z) = c/H0 * int_0^z dz&apos; / ((1 + z&apos;) * E(z&apos;)) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" line="65" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" declline="65" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1ga682405d9081864aaa0b706ede0736244" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::redshift2LightTravelDistance</definition>
        <argsstring>(double redshift)</argsstring>
        <name>redshift2LightTravelDistance</name>
        <param>
          <type>double</type>
          <declname>redshift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Light travel distance between an observer at z = 0 and a comoving object at z. d_lighttravel(z) = c/H0 * int_0^z dz&apos; / ((1 + z&apos;) * E(z&apos;)) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" line="71" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" declline="71" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1ga99330b59d91d6c538122bc1e477e24c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::comoving2LightTravelDistance</definition>
        <argsstring>(double distance)</argsstring>
        <name>comoving2LightTravelDistance</name>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" line="74" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" declline="74" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1ga1cad0b62bf8c1b8b1dd44295b3ec40f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::lightTravel2ComovingDistance</definition>
        <argsstring>(double distance)</argsstring>
        <name>lightTravel2ComovingDistance</name>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" line="77" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Cosmology.h" declline="77" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1a40c64acf5922cfe05f6b5a82d008b201" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::periodicClamp</definition>
        <argsstring>(double x, int n, int &amp;lo, int &amp;hi)</argsstring>
        <name>periodicClamp</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>hi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lower and upper neighbour in a periodically continued unit grid </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" line="29" column="13" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1a42f2bb65aca43e8defb9d7a922814c7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int crpropa::reflectiveBoundary</definition>
        <argsstring>(int index, int n)</argsstring>
        <name>reflectiveBoundary</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>grid index in a reflective continued unit grid </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" line="35" column="12" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1ae8add7f940570a0e49a13093314654aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int crpropa::periodicBoundary</definition>
        <argsstring>(int index, int n)</argsstring>
        <name>periodicBoundary</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>grid index in a periodically continued unit grid </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" line="42" column="12" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1ace22026777085984c6892b1fe629ec13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::reflectiveClamp</definition>
        <argsstring>(double x, int n, int &amp;lo, int &amp;hi, double &amp;res)</argsstring>
        <name>reflectiveClamp</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>hi</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lower and upper neighbour in a reflectively repeated unit grid </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" line="47" column="13" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" bodystart="47" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1afdfae60dd4680363c4a98a60d4b087b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::round</definition>
        <argsstring>(double r)</argsstring>
        <name>round</name>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Symmetrical round </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" line="60" column="15" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Grid.h" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga14e9170907096634f33d71ec5aae75d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3f</ref></type>
        <definition>Vector3f crpropa::meanFieldVector</definition>
        <argsstring>(ref_ptr&lt; Grid3f &gt; grid)</argsstring>
        <name>meanFieldVector</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid3f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the mean vector of all grid points. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector grid (Grid3f) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The mean of all grid points along each axis </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="36" column="10" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="36" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga35a4fc74b7deadd58ff6209df14140c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::meanFieldStrength</definition>
        <argsstring>(ref_ptr&lt; Grid1f &gt; grid)</argsstring>
        <name>meanFieldStrength</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid1f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the mean of all grid points. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a scalar grid (Grid1f) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The mean of all grid points </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="42" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="42" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga095a3cc70d79ca2a58df236d823fc7f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::meanFieldStrength</definition>
        <argsstring>(ref_ptr&lt; Grid3f &gt; grid)</argsstring>
        <name>meanFieldStrength</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid3f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the mean of all grid points. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector grid (Grid3f) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The mean of all grid points </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="47" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="47" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga788ff1002bda23d428e0e43ac5b7cf3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::rmsFieldStrength</definition>
        <argsstring>(ref_ptr&lt; Grid1f &gt; grid)</argsstring>
        <name>rmsFieldStrength</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid1f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the RMS of all grid points. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a scalar grid (Grid1f) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The total RMS of all grid points. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="53" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="53" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga42f4cdca40b5d3f1632ac93a886a8781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::rmsFieldStrength</definition>
        <argsstring>(ref_ptr&lt; Grid3f &gt; grid)</argsstring>
        <name>rmsFieldStrength</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid3f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the RMS of all grid points. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector grid (Grid3f) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The total RMS of all grid points. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="58" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="58" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1gad823c8cf8555f1b45432468adef2d404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::array&lt; float, 3 &gt;</type>
        <definition>std::array&lt; float, 3 &gt; crpropa::rmsFieldStrengthPerAxis</definition>
        <argsstring>(ref_ptr&lt; Grid3f &gt; grid)</argsstring>
        <name>rmsFieldStrengthPerAxis</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid3f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the RMS of all grid points per axis. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector grid (Grid3f) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of length 3 with the RMS field along each axis. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="63" column="12" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="63" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga0d66e0a4632d21364c4227784074f53e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::scaleGrid</definition>
        <argsstring>(ref_ptr&lt; Grid1f &gt; grid, double a)</argsstring>
        <name>scaleGrid</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid1f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply all grid values by a given factor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a scalar grid (Grid1f) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling factor that will be used to multiply all points in grid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="69" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="69" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1gad86fe3acb119896b39adb6d751b57700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::scaleGrid</definition>
        <argsstring>(ref_ptr&lt; Grid3f &gt; grid, double a)</argsstring>
        <name>scaleGrid</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid3f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply all grid values by a given factor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector grid (Grid3f) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling factor that will be used to multiply all points in grid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="74" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="74" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1gaf89e81d370fe811cc9386261f02166a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::fromMagneticField</definition>
        <argsstring>(ref_ptr&lt; Grid3f &gt; grid, ref_ptr&lt; MagneticField &gt; field)</argsstring>
        <name>fromMagneticField</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid3f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1MagneticField" kindref="compound">MagneticField</ref> &gt;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill vector grid from provided magnetic field. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector grid (Grid3f) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the magnetic field </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="80" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="80" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga0501e5b31dd2cdb5159459d874f16d30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::fromMagneticFieldStrength</definition>
        <argsstring>(ref_ptr&lt; Grid1f &gt; grid, ref_ptr&lt; MagneticField &gt; field)</argsstring>
        <name>fromMagneticFieldStrength</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid1f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1MagneticField" kindref="compound">MagneticField</ref> &gt;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill scalar grid from provided magnetic field. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a scalar grid (Grid1f) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the magnetic field </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="86" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="86" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1gab7c740cf66f560083029b8a6196a46a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::loadGrid</definition>
        <argsstring>(ref_ptr&lt; Grid3f &gt; grid, std::string filename, double conversion=1)</argsstring>
        <name>loadGrid</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid3f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>double</type>
          <declname>conversion</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load a Grid3f from a binary file with single precision. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector grid (Grid3f) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of input file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conversion</parametername>
</parameternamelist>
<parameterdescription>
<para>multiply every point in grid by a conversion factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="93" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="93" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga091a17cca41dba2b79ec383f7f9e8f37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::loadGrid</definition>
        <argsstring>(ref_ptr&lt; Grid1f &gt; grid, std::string filename, double conversion=1)</argsstring>
        <name>loadGrid</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid1f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>double</type>
          <declname>conversion</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load a Grid1f from a binary file with single precision. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a scalar grid (Grid1f) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of input file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conversion</parametername>
</parameternamelist>
<parameterdescription>
<para>multiply every point in grid by a conversion factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="101" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="101" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1gad5b5ba4c8f79b6b797c57d7ee658c1a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::dumpGrid</definition>
        <argsstring>(ref_ptr&lt; Grid3f &gt; grid, std::string filename, double conversion=1)</argsstring>
        <name>dumpGrid</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid3f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>double</type>
          <declname>conversion</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dump a Grid3f to a binary file. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector grid (Grid3f) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of input file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conversion</parametername>
</parameternamelist>
<parameterdescription>
<para>multiply every point in grid by a conversion factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="109" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="109" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga2be301c04cc62be7b1efdc3d8472dcda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::dumpGrid</definition>
        <argsstring>(ref_ptr&lt; Grid1f &gt; grid, std::string filename, double conversion=1)</argsstring>
        <name>dumpGrid</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid1f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>double</type>
          <declname>conversion</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dump a Grid1f to a binary file with single precision. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a scalar grid (Grid1f) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of input file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conversion</parametername>
</parameternamelist>
<parameterdescription>
<para>multiply every point in grid by a conversion factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="117" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="117" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1gaad9520b837fa3ff060ed1786da8c7f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::loadGridFromTxt</definition>
        <argsstring>(ref_ptr&lt; Grid3f &gt; grid, std::string filename, double conversion=1)</argsstring>
        <name>loadGridFromTxt</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid3f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>double</type>
          <declname>conversion</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load a Grid3f grid from a plain text file. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector grid (Grid3f) to which the points will be loaded </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of input file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conversion</parametername>
</parameternamelist>
<parameterdescription>
<para>multiply every point in grid by a conversion factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="125" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="125" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1gab66dd49f6fc38ee6834eff297e730ae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::loadGridFromTxt</definition>
        <argsstring>(ref_ptr&lt; Grid1f &gt; grid, std::string filename, double conversion=1)</argsstring>
        <name>loadGridFromTxt</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid1f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>double</type>
          <declname>conversion</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load a Grid1f from a plain text file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a scalar grid (Grid1f) to which the points will be loaded </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of input file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conversion</parametername>
</parameternamelist>
<parameterdescription>
<para>multiply every point in grid by a conversion factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="133" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="133" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1gad230c08955c7a505eefe413366f4717a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::dumpGridToTxt</definition>
        <argsstring>(ref_ptr&lt; Grid3f &gt; grid, std::string filename, double conversion=1)</argsstring>
        <name>dumpGridToTxt</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid3f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>double</type>
          <declname>conversion</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dump a Grid3f to a plain text file. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector grid (Grid3f) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of output file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conversion</parametername>
</parameternamelist>
<parameterdescription>
<para>multiply every point in grid by a conversion factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="141" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="141" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga25cabf4d5be84ea94f9bd90d50b17a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::dumpGridToTxt</definition>
        <argsstring>(ref_ptr&lt; Grid1f &gt; grid, std::string filename, double conversion=1)</argsstring>
        <name>dumpGridToTxt</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Grid" kindref="compound">Grid1f</ref> &gt;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>double</type>
          <declname>conversion</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dump a Grid1f to a plain text file. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>a scalar grid (Grid1f) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of output file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conversion</parametername>
</parameternamelist>
<parameterdescription>
<para>multiply every point in grid by a conversion factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" line="149" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/GridTools.h" declline="149" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1aa9174909a4e0ee185d124caabf1549a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::serialize</definition>
        <argsstring>(const string &amp;filename, const ModelMatrixType &amp;matrix)</argsstring>
        <name>serialize</name>
        <param>
          <type>const string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const ModelMatrixType &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes the ModelMatrix to disk as binary files with the format: Int (number of non zero elements), Int (size1), Int (size2) (Int, Int, Double) : (column, row, value) triples ... </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" line="50" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" declline="50" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1a29dbf1e61010b4104941a96eaa846cf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::deserialize</definition>
        <argsstring>(const string &amp;filename, ModelMatrixType &amp;matrix)</argsstring>
        <name>deserialize</name>
        <param>
          <type>const string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>ModelMatrixType &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
<para>Reads a matrix from file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" line="53" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" declline="53" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1a02a34444430a990a7a1cec430148f345" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::normalizeColumns</definition>
        <argsstring>(ModelMatrixType &amp;matrix)</argsstring>
        <name>normalizeColumns</name>
        <param>
          <type>ModelMatrixType &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
<para>Normalizes each column j of the matrix so that, <formula id="0">$ \Vert m_j \Vert_1 = 1 $</formula>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" line="56" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1a2f6ed50a4dd5e68e6532340866a6819d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::maximumOfSumsOfColumns</definition>
        <argsstring>(const ModelMatrixType &amp;matrix)</argsstring>
        <name>maximumOfSumsOfColumns</name>
        <param>
          <type>const ModelMatrixType &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
<para>Calculate the maximum of the unity norm of the column vectors of the matrix <formula id="1">$\max_j(\Vert m_j \Vert_1) $</formula>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" line="59" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" declline="59" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1a855096c8ab3bc4b926e81bd45d2ed743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::norm_1</definition>
        <argsstring>(const ModelVectorType &amp;v)</argsstring>
        <name>norm_1</name>
        <param>
          <type>const ModelVectorType &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" line="61" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" declline="61" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1ad8d07016ad6bfeeb3820f0e6a28c4f77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::normalizeMatrix</definition>
        <argsstring>(ModelMatrixType &amp;matrix, double norm)</argsstring>
        <name>normalizeMatrix</name>
        <param>
          <type>ModelMatrixType &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>double</type>
          <declname>norm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" line="63" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" declline="63" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1a311fac498c76c37962a69f010f41dc43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::prod_up</definition>
        <argsstring>(const ModelMatrixType &amp;matrix, double *model)</argsstring>
        <name>prod_up</name>
        <param>
          <type>const ModelMatrixType &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" line="66" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/magneticLens/ModelMatrix.h" declline="66" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1ga4cfe916fc8af0f4a394ad6e541a1e834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int crpropa::nucleusId</definition>
        <argsstring>(int a, int z)</argsstring>
        <name>nucleusId</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This implements the 2012 Monte Carlo nuclear code scheme. Ion numbers are +/- 10LZZZAAAI. AAA is A - total baryon number ZZZ is Z - total charge L is the total number of strange quarks. I is the isomer number, with I=0 corresponding to the ground state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/ParticleID.h" line="26" column="5" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/ParticleID.h" declline="26" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1ga0c658ca545d45436c718148e9b82af87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int crpropa::chargeNumber</definition>
        <argsstring>(int id)</argsstring>
        <name>chargeNumber</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/ParticleID.h" line="27" column="5" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/ParticleID.h" declline="27" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1gaf2b051d255cfeb00149e80831e0c3b5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int crpropa::massNumber</definition>
        <argsstring>(int id)</argsstring>
        <name>massNumber</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/ParticleID.h" line="28" column="5" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/ParticleID.h" declline="28" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1ga7a02cec5006af6f5eb4bd415ea9ab2db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool crpropa::isNucleus</definition>
        <argsstring>(int id)</argsstring>
        <name>isNucleus</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/ParticleID.h" line="30" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/ParticleID.h" declline="30" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1ga03f1b5d08b70e6a06ed71d9006dea6de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string crpropa::convertIdToName</definition>
        <argsstring>(int id)</argsstring>
        <name>convertIdToName</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/ParticleID.h" line="33" column="13" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/ParticleID.h" declline="33" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1ga2f8daaf6e06efae63d7c323230458937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::nuclearMass</definition>
        <argsstring>(int id)</argsstring>
        <name>nuclearMass</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the nucleus mass by lookup from a table. The masses are the atomic masses from the NIST database: <ulink url="http://www.nist.gov/pml/data/comp.cfm">http://www.nist.gov/pml/data/comp.cfm</ulink> minus electron masses, neglecting electron binding energies. Unmeasured atomic masses are taken to be A * amu minus electron masses. The data table is generated by data-tools/NuclearMass/createNuclearMassTable. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>id of the particle following the PDG numbering scheme </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The mass of a the nucleus </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/ParticleMass.h" line="19" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/ParticleMass.h" declline="19" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PhysicsDefinitions_1ga6a21da6982c810db1b77794e8b9ef179" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double crpropa::nuclearMass</definition>
        <argsstring>(int A, int Z)</argsstring>
        <name>nuclearMass</name>
        <param>
          <type>int</type>
          <declname>A</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the nucleus mass by lookup from a table. The masses are the atomic masses from the NIST database: <ulink url="http://www.nist.gov/pml/data/comp.cfm">http://www.nist.gov/pml/data/comp.cfm</ulink> minus electron masses, neglecting electron binding energies. Unmeasured atomic masses are taken to be A * amu minus electron masses. The data table is generated by data-tools/NuclearMass/createNuclearMassTable. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>atomic mass number of the nucleus </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Z</parametername>
</parameternamelist>
<parameterdescription>
<para>atomic number of the nucleus </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The mass of a the nucleus </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/ParticleMass.h" line="30" column="8" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/ParticleMass.h" declline="30" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1aca0899b6299bda24481d6ec1eeff7988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::ElecaPropagation</definition>
        <argsstring>(const std::string &amp;inputfile, const std::string &amp;outputfile, bool showProgress=true, double lowerEnergyThreshold=0.8010882435, double magneticFieldStrength=1E-13, const std::string &amp;background=&quot;ALL&quot;)</argsstring>
        <name>ElecaPropagation</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>inputfile</declname>
          <briefdescription><para>input in <ref refid="classcrpropa_1_1PhotonOutput1D" kindref="compound">PhotonOutput1D</ref> format </para>
</briefdescription>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>outputfile</declname>
          <briefdescription><para>output in <ref refid="classcrpropa_1_1PhotonOutput1D" kindref="compound">PhotonOutput1D</ref> format </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>showProgress</declname>
          <defval>true</defval>
          <briefdescription><para>show a progress bar </para>
</briefdescription>
        </param>
        <param>
          <type>double</type>
          <declname>lowerEnergyThreshold</declname>
          <defval>0.8010882435</defval>
          <briefdescription><para>threshold energy [J], default = 5 EeV </para>
</briefdescription>
        </param>
        <param>
          <type>double</type>
          <declname>magneticFieldStrength</declname>
          <defval>1E-13</defval>
          <briefdescription><para>magnetic field strength [T], default = 1 nG </para>
</briefdescription>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>background</declname>
          <defval>&quot;ALL&quot;</defval>
          <briefdescription><para>photon background string </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Propagate photons, electrons and positrons using the EleCa code. The propagation is stopped when the particles reach the observer or their energy drops below the threshold energy. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/PhotonPropagation.h" line="18" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/PhotonPropagation.h" declline="18" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1aa45964706e7d6ba2ffac41794424769f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::DintPropagation</definition>
        <argsstring>(const std::string &amp;inputfile, const std::string &amp;outputfile, int IRFlag=4, int RadioFlag=4, double magneticFieldStrength=1E-13, double aCutcascade_Magfield=0)</argsstring>
        <name>DintPropagation</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>inputfile</declname>
          <briefdescription><para>input in <ref refid="classcrpropa_1_1PhotonOutput1D" kindref="compound">PhotonOutput1D</ref> format </para>
</briefdescription>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>outputfile</declname>
          <briefdescription><para>output spectrum (photons, electrons, positrons) </para>
</briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>IRFlag</declname>
          <defval>4</defval>
          <briefdescription><para>EBL background 0: high, 1: low, 2: Primack, 4: Stecker&apos;06 </para>
</briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>RadioFlag</declname>
          <defval>4</defval>
          <briefdescription><para>radio background 0: high, 1: medium, 2: obs, 3: none, 4: Protheroe&apos;96 </para>
</briefdescription>
        </param>
        <param>
          <type>double</type>
          <declname>magneticFieldStrength</declname>
          <defval>1E-13</defval>
          <briefdescription><para>magnetic field strength [T], default = 1 nG </para>
</briefdescription>
        </param>
        <param>
          <type>double</type>
          <declname>aCutcascade_Magfield</declname>
          <defval>0</defval>
          <briefdescription><para>a-parameter, see CRPropa 2 paper </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the electromagnetic cascade with DINT </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/PhotonPropagation.h" line="30" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/PhotonPropagation.h" declline="30" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1a7ea72826e167beaa042efafaec6876da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::DintElecaPropagation</definition>
        <argsstring>(const std::string &amp;inputfile, const std::string &amp;outputfile, bool showProgress=true, double crossOverEnergy=0.08010882435, double magneticFieldStrength=1E-13, double aCutcascade_Magfield=0)</argsstring>
        <name>DintElecaPropagation</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>inputfile</declname>
          <briefdescription><para>input in <ref refid="classcrpropa_1_1PhotonOutput1D" kindref="compound">PhotonOutput1D</ref> format </para>
</briefdescription>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>outputfile</declname>
          <briefdescription><para>output spectrum (photons, electrons, positrons) </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>showProgress</declname>
          <defval>true</defval>
          <briefdescription><para>show a progress bar </para>
</briefdescription>
        </param>
        <param>
          <type>double</type>
          <declname>crossOverEnergy</declname>
          <defval>0.08010882435</defval>
          <briefdescription><para>crossover energy [J] between EleCa and DINT, default = 0.5 EeV </para>
</briefdescription>
        </param>
        <param>
          <type>double</type>
          <declname>magneticFieldStrength</declname>
          <defval>1E-13</defval>
          <briefdescription><para>magnetic field strength [T], default = 1 nG </para>
</briefdescription>
        </param>
        <param>
          <type>double</type>
          <declname>aCutcascade_Magfield</declname>
          <defval>0</defval>
          <briefdescription><para>a-parameter, see CRPropa 2 paper </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Propagate photons using EleCa for energies above the crossover energy and DINT below </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/PhotonPropagation.h" line="42" column="6" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/PhotonPropagation.h" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga6807b028241faff59152dde29e2edfb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::intrusive_ptr_add_ref</definition>
        <argsstring>(Referenced *p)</argsstring>
        <name>intrusive_ptr_add_ref</name>
        <param>
          <type><ref refid="classcrpropa_1_1Referenced" kindref="compound">Referenced</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="101" column="13" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1gadd64a0c21dcedde2102f949e36f2f1d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void crpropa::intrusive_ptr_release</definition>
        <argsstring>(Referenced *p)</argsstring>
        <name>intrusive_ptr_release</name>
        <param>
          <type><ref refid="classcrpropa_1_1Referenced" kindref="compound">Referenced</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="104" column="13" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1gaef75b9b7ae9d4b5d5258b8674259d715" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void crpropa::swap</definition>
        <argsstring>(ref_ptr&lt; T &gt; &amp;rp1, ref_ptr&lt; T &gt; &amp;rp2)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; T &gt; &amp;</type>
          <declname>rp1</declname>
        </param>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; T &gt; &amp;</type>
          <declname>rp2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="218" column="6" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga1bb6f6a9de2fdd3f1fd8e1f36a03d1b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * crpropa::get_pointer</definition>
        <argsstring>(const ref_ptr&lt; T &gt; &amp;rp)</argsstring>
        <name>get_pointer</name>
        <param>
          <type>const <ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; T &gt; &amp;</type>
          <declname>rp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="222" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga21ca69db76e5efe007489b30d0d92ef8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class Y</type>
          </param>
        </templateparamlist>
        <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; T &gt;</type>
        <definition>ref_ptr&lt; T &gt; crpropa::static_pointer_cast</definition>
        <argsstring>(const ref_ptr&lt; Y &gt; &amp;rp)</argsstring>
        <name>static_pointer_cast</name>
        <param>
          <type>const <ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; Y &gt; &amp;</type>
          <declname>rp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="226" column="29" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="226" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga44546dc98a4f8e8bd50afae4ae1fec8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class Y</type>
          </param>
        </templateparamlist>
        <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; T &gt;</type>
        <definition>ref_ptr&lt; T &gt; crpropa::dynamic_pointer_cast</definition>
        <argsstring>(const ref_ptr&lt; Y &gt; &amp;rp)</argsstring>
        <name>dynamic_pointer_cast</name>
        <param>
          <type>const <ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; Y &gt; &amp;</type>
          <declname>rp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="231" column="29" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga0663b76fe38fa53188a902e8f70bbb8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class Y</type>
          </param>
        </templateparamlist>
        <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; T &gt;</type>
        <definition>ref_ptr&lt; T &gt; crpropa::const_pointer_cast</definition>
        <argsstring>(const ref_ptr&lt; Y &gt; &amp;rp)</argsstring>
        <name>const_pointer_cast</name>
        <param>
          <type>const <ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; Y &gt; &amp;</type>
          <declname>rp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="236" column="29" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="236" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="namespacecrpropa_1a0a3faf0d97b1add4a0fc947c3498415d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; crpropa::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Variant &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classcrpropa_1_1Variant" kindref="compound">Variant</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Variant.h" line="227" column="1" declfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Variant.h" declline="227" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1gaf1695869279c2571e31c8547f65fe9c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; crpropa::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Vector3&lt; T &gt; &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Vector3.h" line="415" column="8" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Vector3.h" bodystart="415" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga688c4960d76366bf6fce1cf5eac2f129" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; crpropa::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;in, Vector3&lt; T &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Vector3.h" line="421" column="21" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Vector3.h" bodystart="421" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="group__Core_1ga23bf6b37f4133adc37b6f3d057410c94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt; T &gt; crpropa::operator*</definition>
        <argsstring>(T f, const Vector3&lt; T &gt; &amp;v)</argsstring>
        <name>operator*</name>
        <param>
          <type>T</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Vector3.h" line="428" column="16" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Vector3.h" bodystart="428" bodyend="430"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>CRPRopa public definitions. </para>
    </briefdescription>
    <detaileddescription>
<para>CRPropa is a public astrophysical simulation framework for propagating extraterrestrial ultra-high energy particles. </para>
    </detaileddescription>
    <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/CRPropa.h" line="84" column="1"/>
  </compounddef>
</doxygen>
