<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classcrpropa_1_1EmissionMap" kind="class" language="C++" prot="public">
    <compoundname>crpropa::EmissionMap</compoundname>
    <basecompoundref refid="classcrpropa_1_1Referenced" prot="public" virt="non-virtual">Referenced</basecompoundref>
    <includes refid="EmissionMap_8h" local="no">crpropa/EmissionMap.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classcrpropa_1_1EmissionMap_1a0f7bc7578f1ba1198ae0d064adc9948e" prot="public" static="no">
        <type>std::pair&lt; int, size_t &gt;</type>
        <definition>typedef std::pair&lt;int, size_t&gt; key_t</definition>
        <argsstring></argsstring>
        <name>key_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="67" column="19" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcrpropa_1_1EmissionMap_1ae3b56cca51a99e15321253bcbd4d6107" prot="public" static="no">
        <type>std::map&lt; key_t, <ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1CylindricalProjectionMap" kindref="compound">CylindricalProjectionMap</ref> &gt; &gt;</type>
        <definition>typedef std::map&lt;key_t, ref_ptr&lt;CylindricalProjectionMap&gt; &gt; map_t</definition>
        <argsstring></argsstring>
        <name>map_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="68" column="18" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcrpropa_1_1EmissionMap_1a144b0df2aca2c9caceef6ccc42a181d4" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double minEnergy</definition>
        <argsstring></argsstring>
        <name>minEnergy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="129" column="8" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1EmissionMap_1aab62e7716d239ed8e0266a1168f98627" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double maxEnergy</definition>
        <argsstring></argsstring>
        <name>maxEnergy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="129" column="18" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1EmissionMap_1a052aaf3c31b34ad92266e548214050b1" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double logStep</definition>
        <argsstring></argsstring>
        <name>logStep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="129" column="28" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1EmissionMap_1a2790604d6266d367e538df6bf743c8ac" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t nPhi</definition>
        <argsstring></argsstring>
        <name>nPhi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="130" column="8" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1EmissionMap_1ad1960bcf86f878fb20c84d20582bc52a" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t nTheta</definition>
        <argsstring></argsstring>
        <name>nTheta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="130" column="13" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1EmissionMap_1a9d6251af3ad0a17acbfae814abb183de" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t nEnergy</definition>
        <argsstring></argsstring>
        <name>nEnergy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="130" column="20" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1EmissionMap_1a386237e538c15d5cf8518d0934c254cd" prot="private" static="no" mutable="no">
        <type>map_t</type>
        <definition>map_t maps</definition>
        <argsstring></argsstring>
        <name>maps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="131" column="7" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1a54a81bf534f773d2aaa5b4a044f156c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EmissionMap</definition>
        <argsstring>()</argsstring>
        <name>EmissionMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1afff8f59c9a998ccccd12a31d496c0cb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EmissionMap</definition>
        <argsstring>(size_t nPhi, size_t nTheta, size_t nEnergy)</argsstring>
        <name>EmissionMap</name>
        <param>
          <type>size_t</type>
          <declname>nPhi</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nTheta</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nEnergy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nPhi</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bins for phi (0-2pi) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nTheta</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bins for theta (0-pi) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nEnergy</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bins for energy (1e-4 - 1e4 EeV) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1abe87503d56b68fc6cd855caf0487c9d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EmissionMap</definition>
        <argsstring>(size_t nPhi, size_t nTheta, size_t nEnergy, double minEnergy, double maxEnergy)</argsstring>
        <name>EmissionMap</name>
        <param>
          <type>size_t</type>
          <declname>nPhi</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nTheta</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nEnergy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>minEnergy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxEnergy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nPhi</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bins for phi (0-2pi) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nTheta</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bins for theta (0-pi) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nEnergy</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bins for energy (1e-4 - 1e4 EeV) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minEnergy</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum energy for binning </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxEnergy</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum energy for binning </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1a70ca0954b2fbdd5f634cc2087b32e85c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double energyFromBin</definition>
        <argsstring>(size_t bin) const</argsstring>
        <name>energyFromBin</name>
        <param>
          <type>size_t</type>
          <declname>bin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate energy from bin </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="88" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1a4e2b86cb87a375010c1c647de60c29e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t binFromEnergy</definition>
        <argsstring>(double energy) const</argsstring>
        <name>binFromEnergy</name>
        <param>
          <type>double</type>
          <declname>energy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate bin from energy </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="91" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1a3c9bfb9673108a2c9997a6e78dd257e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>map_t &amp;</type>
        <definition>map_t &amp; getMaps</definition>
        <argsstring>()</argsstring>
        <name>getMaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="93" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1a7412ea7b552667fe8790e5c07b16ab03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const map_t &amp;</type>
        <definition>const map_t &amp; getMaps</definition>
        <argsstring>() const</argsstring>
        <name>getMaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="94" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1aeb832864673a3b429ad46c8254e60d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fillMap</definition>
        <argsstring>(int pid, double energy, const Vector3d &amp;direction, double weight=1.)</argsstring>
        <name>fillMap</name>
        <param>
          <type>int</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>energy</declname>
        </param>
        <param>
          <type>const <ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref> &amp;</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>weight</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Increment the value for particle type, energy and direction by weight. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="97" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1a6480900016f04627ba382a41fbc0302f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fillMap</definition>
        <argsstring>(const ParticleState &amp;state, double weight=1.)</argsstring>
        <name>fillMap</name>
        <param>
          <type>const <ref refid="classcrpropa_1_1ParticleState" kindref="compound">ParticleState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>double</type>
          <declname>weight</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Increment the value for the particle state by weight. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="99" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1aa1c3f11f3da6e4691b75ac1d60e4569b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool drawDirection</definition>
        <argsstring>(int pid, double energy, Vector3d &amp;direction) const</argsstring>
        <name>drawDirection</name>
        <param>
          <type>int</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>energy</declname>
        </param>
        <param>
          <type><ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref> &amp;</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Draw a random vector from the distribution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="102" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1a20e57a4480c67eedd423544bba5d055e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool drawDirection</definition>
        <argsstring>(const ParticleState &amp;state, Vector3d &amp;direction) const</argsstring>
        <name>drawDirection</name>
        <param>
          <type>const <ref refid="classcrpropa_1_1ParticleState" kindref="compound">ParticleState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref> &amp;</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Draw a random vector from the distribution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="104" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1a2b55fb1e9bdaf2a37c107057e7026250" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool checkDirection</definition>
        <argsstring>(int pid, double energy, const Vector3d &amp;direction) const</argsstring>
        <name>checkDirection</name>
        <param>
          <type>int</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>energy</declname>
        </param>
        <param>
          <type>const <ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref> &amp;</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the direction has a non zero propabiliy. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="107" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1abfc0feb1185c10e014d4ed095a4a5f6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool checkDirection</definition>
        <argsstring>(const ParticleState &amp;state) const</argsstring>
        <name>checkDirection</name>
        <param>
          <type>const <ref refid="classcrpropa_1_1ParticleState" kindref="compound">ParticleState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the direction has a non zero propabiliy. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="109" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1add747b2882f6f52875f6450009434da7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hasMap</definition>
        <argsstring>(int pid, double energy)</argsstring>
        <name>hasMap</name>
        <param>
          <type>int</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>energy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if a valid map exists </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="112" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1a7d6705a69d1a822c55016d24639d3d1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1CylindricalProjectionMap" kindref="compound">CylindricalProjectionMap</ref> &gt;</type>
        <definition>ref_ptr&lt; CylindricalProjectionMap &gt; getMap</definition>
        <argsstring>(int pid, double energy)</argsstring>
        <name>getMap</name>
        <param>
          <type>int</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>energy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the map for the specified pid and energy </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="115" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1a2c027edbcd25b820dc6e21a9a3ad0496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void save</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>save</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save the content of the maps into a text file </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="118" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1a6c21edd9d285c925527e3209fca54b01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void load</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>load</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load the content of the maps from a text file </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="120" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1a34fbd884162389256d311b83e96d6832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void merge</definition>
        <argsstring>(const EmissionMap *other)</argsstring>
        <name>merge</name>
        <param>
          <type>const <ref refid="classcrpropa_1_1EmissionMap" kindref="compound">EmissionMap</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Merge other maps, add pdfs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="123" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1EmissionMap_1a5333ce09525a8f85fcd127316e754d69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void merge</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>merge</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Merge maps from file </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="126" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Referenced_1a6ef7442f4d857baf3d3a39fdeec4aadd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t addReference</definition>
        <argsstring>() const</argsstring>
        <name>addReference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="42" column="15" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="42" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Referenced_1ab9f5dbbba1431274016b3d74426953f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t removeReference</definition>
        <argsstring>() const</argsstring>
        <name>removeReference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="56" column="15" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="56" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Referenced_1adab41cca5664d4668930f93beefa39b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int removeReferenceNoDelete</definition>
        <argsstring>() const</argsstring>
        <name>removeReferenceNoDelete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="80" column="5" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Referenced_1a74487fc4399bfa67c7251dae5d4247cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t getReferenceCount</definition>
        <argsstring>() const</argsstring>
        <name>getReferenceCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="84" column="15" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="84" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Particle Type and energy binned emission maps. </para>
    </briefdescription>
    <detaileddescription>
<para>Use <ref refid="classcrpropa_1_1SourceEmissionMap" kindref="compound">SourceEmissionMap</ref> to suppress directions at the source. Use <ref refid="classcrpropa_1_1EmissionMapFiller" kindref="compound">EmissionMapFiller</ref> to create <ref refid="classcrpropa_1_1EmissionMap" kindref="compound">EmissionMap</ref> from <ref refid="classcrpropa_1_1Observer" kindref="compound">Observer</ref>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>EmissionMap</label>
        <link refid="classcrpropa_1_1EmissionMap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Referenced</label>
        <link refid="classcrpropa_1_1Referenced"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>EmissionMap</label>
        <link refid="classcrpropa_1_1EmissionMap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Referenced</label>
        <link refid="classcrpropa_1_1Referenced"/>
      </node>
    </collaborationgraph>
    <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" line="65" column="1" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/EmissionMap.h" bodystart="65" bodyend="132"/>
    <listofallmembers>
      <member refid="classcrpropa_1_1Referenced_1a6ef7442f4d857baf3d3a39fdeec4aadd" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>addReference</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a4e2b86cb87a375010c1c647de60c29e8" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>binFromEnergy</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a2b55fb1e9bdaf2a37c107057e7026250" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>checkDirection</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1abfc0feb1185c10e014d4ed095a4a5f6c" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>checkDirection</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1aa1c3f11f3da6e4691b75ac1d60e4569b" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>drawDirection</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a20e57a4480c67eedd423544bba5d055e" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>drawDirection</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a54a81bf534f773d2aaa5b4a044f156c8" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>EmissionMap</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1afff8f59c9a998ccccd12a31d496c0cb7" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>EmissionMap</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1abe87503d56b68fc6cd855caf0487c9d2" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>EmissionMap</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a70ca0954b2fbdd5f634cc2087b32e85c" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>energyFromBin</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1aeb832864673a3b429ad46c8254e60d9d" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>fillMap</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a6480900016f04627ba382a41fbc0302f" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>fillMap</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a7d6705a69d1a822c55016d24639d3d1f" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>getMap</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a3c9bfb9673108a2c9997a6e78dd257e8" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>getMaps</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a7412ea7b552667fe8790e5c07b16ab03" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>getMaps</name></member>
      <member refid="classcrpropa_1_1Referenced_1a74487fc4399bfa67c7251dae5d4247cd" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>getReferenceCount</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1add747b2882f6f52875f6450009434da7" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>hasMap</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a0f7bc7578f1ba1198ae0d064adc9948e" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>key_t</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a6c21edd9d285c925527e3209fca54b01" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>load</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a052aaf3c31b34ad92266e548214050b1" prot="private" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>logStep</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1ae3b56cca51a99e15321253bcbd4d6107" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>map_t</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a386237e538c15d5cf8518d0934c254cd" prot="private" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>maps</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1aab62e7716d239ed8e0266a1168f98627" prot="private" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>maxEnergy</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a34fbd884162389256d311b83e96d6832" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>merge</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a5333ce09525a8f85fcd127316e754d69" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>merge</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a144b0df2aca2c9caceef6ccc42a181d4" prot="private" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>minEnergy</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a9d6251af3ad0a17acbfae814abb183de" prot="private" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>nEnergy</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a2790604d6266d367e538df6bf743c8ac" prot="private" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>nPhi</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1ad1960bcf86f878fb20c84d20582bc52a" prot="private" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>nTheta</name></member>
      <member refid="classcrpropa_1_1Referenced_1a888be9022b30422e9c6256171d2ddd72" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>operator=</name></member>
      <member refid="classcrpropa_1_1Referenced_1a391f8e65894afa3547e70d95a589f631" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>Referenced</name></member>
      <member refid="classcrpropa_1_1Referenced_1a8e7407db7805ac439d0c4813bc1860a1" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>Referenced</name></member>
      <member refid="classcrpropa_1_1Referenced_1ab9f5dbbba1431274016b3d74426953f2" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>removeReference</name></member>
      <member refid="classcrpropa_1_1Referenced_1adab41cca5664d4668930f93beefa39b5" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>removeReferenceNoDelete</name></member>
      <member refid="classcrpropa_1_1EmissionMap_1a2c027edbcd25b820dc6e21a9a3ad0496" prot="public" virt="non-virtual"><scope>crpropa::EmissionMap</scope><name>save</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
