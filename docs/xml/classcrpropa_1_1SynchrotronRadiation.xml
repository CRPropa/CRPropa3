<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classcrpropa_1_1SynchrotronRadiation" kind="class" language="C++" prot="public">
    <compoundname>crpropa::SynchrotronRadiation</compoundname>
    <basecompoundref refid="classcrpropa_1_1Module" prot="public" virt="non-virtual">Module</basecompoundref>
    <includes refid="SynchrotronRadiation_8h" local="no">crpropa/module/SynchrotronRadiation.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcrpropa_1_1SynchrotronRadiation_1ad3a6446cf9fbc7288b4d3f4af4db5e26" prot="private" static="no" mutable="no">
        <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1MagneticField" kindref="compound">MagneticField</ref> &gt;</type>
        <definition>ref_ptr&lt;MagneticField&gt; field</definition>
        <argsstring></argsstring>
        <name>field</name>
        <briefdescription>
<para><ref refid="classcrpropa_1_1MagneticField" kindref="compound">MagneticField</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="27" column="9" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1SynchrotronRadiation_1a4a3b1e311dd00ce6014eba205ae77141" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Brms</definition>
        <argsstring></argsstring>
        <name>Brms</name>
        <briefdescription>
<para>Brms value in case no <ref refid="classcrpropa_1_1MagneticField" kindref="compound">MagneticField</ref> is specified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="28" column="8" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1SynchrotronRadiation_1ab6e1fbde91d4eed5fc908aebbe727bef" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double limit</definition>
        <argsstring></argsstring>
        <name>limit</name>
        <briefdescription>
<para>fraction of energy loss length to limit the next step </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="29" column="8" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1SynchrotronRadiation_1a25414d763dcc674239a96441ae4ff8ca" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double thinning</definition>
        <argsstring></argsstring>
        <name>thinning</name>
        <briefdescription>
<para>thinning parameter for weighted-sampling (maximum 1, minimum 0) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="30" column="8" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1SynchrotronRadiation_1aeb2730dc850f214c5a72ec5c17630fb5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool havePhotons</definition>
        <argsstring></argsstring>
        <name>havePhotons</name>
        <briefdescription>
<para>flag for production of secondary photons </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="31" column="6" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1SynchrotronRadiation_1a1c1c66c665b9b92e7782586f4a97d134" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int maximumSamples</definition>
        <argsstring></argsstring>
        <name>maximumSamples</name>
        <briefdescription>
<para>maximum number of samples of synchrotron photons (break condition; defaults to 100; 0 or &lt;0 means no sampling) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="32" column="5" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1SynchrotronRadiation_1a8013339169c5ff7b181b47f08cdd16f5" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double secondaryThreshold</definition>
        <argsstring></argsstring>
        <name>secondaryThreshold</name>
        <briefdescription>
<para>threshold energy for secondary photons </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="33" column="8" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1SynchrotronRadiation_1a022cdda670dda495305c97319adc2896" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; tabx</definition>
        <argsstring></argsstring>
        <name>tabx</name>
        <briefdescription>
<para>tabulated fraction E_photon/E_critical from 10^-6 to 10^2 in 801 log-spaced steps </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="34" column="13" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1SynchrotronRadiation_1ab906687bcd23da87e75c9e6fbfc93d81" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; tabCDF</definition>
        <argsstring></argsstring>
        <name>tabCDF</name>
        <briefdescription>
<para>tabulated CDF of synchrotron spectrum </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="35" column="13" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1ab7133d363bbd3f404b32b23cb901682f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SynchrotronRadiation</definition>
        <argsstring>(ref_ptr&lt; MagneticField &gt; field, bool havePhotons=false, double thinning=0, int nSamples=0, double limit=0.1)</argsstring>
        <name>SynchrotronRadiation</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1MagneticField" kindref="compound">MagneticField</ref> &gt;</type>
          <declname>field</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>havePhotons</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>double</type>
          <declname>thinning</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nSamples</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>limit</declname>
          <defval>0.1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>magnetic field object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>havePhotons</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, add secondary photons as candidates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thinning</parametername>
</parameternamelist>
<parameterdescription>
<para>weighted sampling of secondaries (0: all particles are tracked; 1: maximum thinning) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of synchrotron photons to be sampled and added as candidates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>step size limit as fraction of mean free path </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1aa0088a47a13e1505eacdb12faee4b4c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SynchrotronRadiation</definition>
        <argsstring>(double Brms=0, bool havePhotons=false, double thinning=0, int nSamples=0, double limit=0.1)</argsstring>
        <name>SynchrotronRadiation</name>
        <param>
          <type>double</type>
          <declname>Brms</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>havePhotons</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>double</type>
          <declname>thinning</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nSamples</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>limit</declname>
          <defval>0.1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>RMS of the magnetic field (if magnetic-field object not provided) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>havePhotons</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, add secondary photons as candidates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thinning</parametername>
</parameternamelist>
<parameterdescription>
<para>weighted sampling of secondaries (0: all particles are tracked; 1: maximum thinning) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of synchrotron photons to be sampled and added as candidates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>step size limit as fraction of mean free path </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1ad9d809e7ecc2fc687d96e64cb86220ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setField</definition>
        <argsstring>(ref_ptr&lt; MagneticField &gt; field)</argsstring>
        <name>setField</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1MagneticField" kindref="compound">MagneticField</ref> &gt;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="56" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1a94d4a272899bde20d7d86d90dd106db3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setBrms</definition>
        <argsstring>(double Brms)</argsstring>
        <name>setBrms</name>
        <param>
          <type>double</type>
          <declname>Brms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="57" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1a777eb899a82cdaa83f93c5a612eed3bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setHavePhotons</definition>
        <argsstring>(bool havePhotons)</argsstring>
        <name>setHavePhotons</name>
        <param>
          <type>bool</type>
          <declname>havePhotons</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="58" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1ae9ec05eded7676fbb5d0159c84b1e13b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setThinning</definition>
        <argsstring>(double thinning)</argsstring>
        <name>setThinning</name>
        <param>
          <type>double</type>
          <declname>thinning</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="59" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1a29ee54f3ff5603da67762de093cff3b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setLimit</definition>
        <argsstring>(double limit)</argsstring>
        <name>setLimit</name>
        <param>
          <type>double</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="60" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1a5b2fbd7ca7b96dec59795b36502132bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setMaximumSamples</definition>
        <argsstring>(int nmax)</argsstring>
        <name>setMaximumSamples</name>
        <param>
          <type>int</type>
          <declname>nmax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the maximum number of synchrotron photons that will be allowed to be added as candidates. This choice depends on the problem at hand. It must be such that all relevant physics is captured with the sample. Weights are added accordingly and the column &apos;weight&apos; must be added to output. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nmax</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of synchrotron photons to be sampled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="65" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1abb666b5e499ded2ac353b9d96f16c2e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setSecondaryThreshold</definition>
        <argsstring>(double threshold)</argsstring>
        <name>setSecondaryThreshold</name>
        <param>
          <type>double</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Synchrotron photons above the secondary energy threshold are added as candidates. This may lead to a quick increase in memory. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>energy threshold above which photons will be added [in Joules] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="70" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1a2537ab873f4734cebef84269f9074a9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1MagneticField" kindref="compound">MagneticField</ref> &gt;</type>
        <definition>ref_ptr&lt; MagneticField &gt; getField</definition>
        <argsstring>()</argsstring>
        <name>getField</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="71" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1a2c9fce1ada6945fda1befd4684fc5fbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double getBrms</definition>
        <argsstring>()</argsstring>
        <name>getBrms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="73" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1ab46d4bbeace2cb307fd832417e72f6e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool getHavePhotons</definition>
        <argsstring>()</argsstring>
        <name>getHavePhotons</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="74" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1a3028f0d674cb21361cb0805aee81e2a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double getThinning</definition>
        <argsstring>()</argsstring>
        <name>getThinning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="75" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1ac68c06af15b9b29687004f2b52d47c7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double getLimit</definition>
        <argsstring>()</argsstring>
        <name>getLimit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="76" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1ae7896a12245275f571f09f0906c79320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getMaximumSamples</definition>
        <argsstring>()</argsstring>
        <name>getMaximumSamples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="77" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1a15d29b02dec8472c8101d840957f9e9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double getSecondaryThreshold</definition>
        <argsstring>() const</argsstring>
        <name>getSecondaryThreshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="78" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1a70c08feff94a05bbdd1b53dd94568cc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initSpectrum</definition>
        <argsstring>()</argsstring>
        <name>initSpectrum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="80" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1ab59d2de78ed0589c122df3d6c0478b41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void process</definition>
        <argsstring>(Candidate *candidate) const</argsstring>
        <name>process</name>
        <reimplements refid="classcrpropa_1_1Module_1adea37d81da751bd3c2825652e1c215de">process</reimplements>
        <param>
          <type><ref refid="classcrpropa_1_1Candidate" kindref="compound">Candidate</ref> *</type>
          <declname>candidate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="81" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1SynchrotronRadiation_1aea425314aebc36d0f6bf7671705158da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string getDescription</definition>
        <argsstring>() const</argsstring>
        <name>getDescription</name>
        <reimplements refid="classcrpropa_1_1Module_1a9025df426d11cbe30c5500d3ffb5d33c">getDescription</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="82" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Module_1a3406b56004afdbe7a1815a541d40de99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setDescription</definition>
        <argsstring>(const std::string &amp;description)</argsstring>
        <name>setDescription</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Module.h" line="25" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Module_1a9f2321c49330b61a52ce55c2015e4c49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void process</definition>
        <argsstring>(ref_ptr&lt; Candidate &gt; candidate) const</argsstring>
        <name>process</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Candidate" kindref="compound">Candidate</ref> &gt;</type>
          <declname>candidate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Module.h" line="27" column="13" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Module.h" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Referenced_1a6ef7442f4d857baf3d3a39fdeec4aadd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t addReference</definition>
        <argsstring>() const</argsstring>
        <name>addReference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="42" column="15" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="42" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Referenced_1ab9f5dbbba1431274016b3d74426953f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t removeReference</definition>
        <argsstring>() const</argsstring>
        <name>removeReference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="56" column="15" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="56" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Referenced_1adab41cca5664d4668930f93beefa39b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int removeReferenceNoDelete</definition>
        <argsstring>() const</argsstring>
        <name>removeReferenceNoDelete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="80" column="5" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Referenced_1a74487fc4399bfa67c7251dae5d4247cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t getReferenceCount</definition>
        <argsstring>() const</argsstring>
        <name>getReferenceCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="84" column="15" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="84" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Synchrotron radiation of charged particles in magnetic fields. </para>
    </briefdescription>
    <detaileddescription>
<para>This module simulates the continuous energy loss of charged particles in magnetic fields, c.f. Jackson. The magnetic field is specified either by a <ref refid="classcrpropa_1_1MagneticField" kindref="compound">MagneticField</ref> or by a RMS field strength value. The module limits the next step size to ensure a fractional energy loss dE/E &lt; limit (default = 0.1). Optionally, synchrotron photons above a threshold (default E &gt; 10^7 eV) are created as secondary particles. Note that the large number of secondary photons per propagation can cause memory problems. To mitigate this, use thinning. However, this still does not solve the problem completely. For this reason, a break-condition stops tracking secondary photons and reweights the current ones. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>SynchrotronRadiation</label>
        <link refid="classcrpropa_1_1SynchrotronRadiation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Module</label>
        <link refid="classcrpropa_1_1Module"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Referenced</label>
        <link refid="classcrpropa_1_1Referenced"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>SynchrotronRadiation</label>
        <link refid="classcrpropa_1_1SynchrotronRadiation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Module</label>
        <link refid="classcrpropa_1_1Module"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Referenced</label>
        <link refid="classcrpropa_1_1Referenced"/>
      </node>
    </collaborationgraph>
    <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" line="25" column="1" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/SynchrotronRadiation.h" bodystart="25" bodyend="83"/>
    <listofallmembers>
      <member refid="classcrpropa_1_1Referenced_1a6ef7442f4d857baf3d3a39fdeec4aadd" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>addReference</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1a4a3b1e311dd00ce6014eba205ae77141" prot="private" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>Brms</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1ad3a6446cf9fbc7288b4d3f4af4db5e26" prot="private" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>field</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1a2c9fce1ada6945fda1befd4684fc5fbf" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>getBrms</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1aea425314aebc36d0f6bf7671705158da" prot="public" virt="virtual"><scope>crpropa::SynchrotronRadiation</scope><name>getDescription</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1a2537ab873f4734cebef84269f9074a9f" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>getField</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1ab46d4bbeace2cb307fd832417e72f6e5" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>getHavePhotons</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1ac68c06af15b9b29687004f2b52d47c7a" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>getLimit</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1ae7896a12245275f571f09f0906c79320" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>getMaximumSamples</name></member>
      <member refid="classcrpropa_1_1Referenced_1a74487fc4399bfa67c7251dae5d4247cd" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>getReferenceCount</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1a15d29b02dec8472c8101d840957f9e9f" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>getSecondaryThreshold</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1a3028f0d674cb21361cb0805aee81e2a7" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>getThinning</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1aeb2730dc850f214c5a72ec5c17630fb5" prot="private" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>havePhotons</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1a70c08feff94a05bbdd1b53dd94568cc6" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>initSpectrum</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1ab6e1fbde91d4eed5fc908aebbe727bef" prot="private" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>limit</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1a1c1c66c665b9b92e7782586f4a97d134" prot="private" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>maximumSamples</name></member>
      <member refid="classcrpropa_1_1Module_1a48d34dc872809277e652493dc3a4746d" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>Module</name></member>
      <member refid="classcrpropa_1_1Referenced_1a888be9022b30422e9c6256171d2ddd72" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>operator=</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1ab59d2de78ed0589c122df3d6c0478b41" prot="public" virt="virtual"><scope>crpropa::SynchrotronRadiation</scope><name>process</name></member>
      <member refid="classcrpropa_1_1Module_1a9f2321c49330b61a52ce55c2015e4c49" prot="public" virt="non-virtual" ambiguityscope="crpropa::Module::"><scope>crpropa::SynchrotronRadiation</scope><name>process</name></member>
      <member refid="classcrpropa_1_1Referenced_1a391f8e65894afa3547e70d95a589f631" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>Referenced</name></member>
      <member refid="classcrpropa_1_1Referenced_1a8e7407db7805ac439d0c4813bc1860a1" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>Referenced</name></member>
      <member refid="classcrpropa_1_1Referenced_1ab9f5dbbba1431274016b3d74426953f2" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>removeReference</name></member>
      <member refid="classcrpropa_1_1Referenced_1adab41cca5664d4668930f93beefa39b5" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>removeReferenceNoDelete</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1a8013339169c5ff7b181b47f08cdd16f5" prot="private" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>secondaryThreshold</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1a94d4a272899bde20d7d86d90dd106db3" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>setBrms</name></member>
      <member refid="classcrpropa_1_1Module_1a3406b56004afdbe7a1815a541d40de99" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>setDescription</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1ad9d809e7ecc2fc687d96e64cb86220ef" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>setField</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1a777eb899a82cdaa83f93c5a612eed3bc" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>setHavePhotons</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1a29ee54f3ff5603da67762de093cff3b1" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>setLimit</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1a5b2fbd7ca7b96dec59795b36502132bb" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>setMaximumSamples</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1abb666b5e499ded2ac353b9d96f16c2e2" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>setSecondaryThreshold</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1ae9ec05eded7676fbb5d0159c84b1e13b" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>setThinning</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1ab7133d363bbd3f404b32b23cb901682f" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>SynchrotronRadiation</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1aa0088a47a13e1505eacdb12faee4b4c5" prot="public" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>SynchrotronRadiation</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1ab906687bcd23da87e75c9e6fbfc93d81" prot="private" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>tabCDF</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1a022cdda670dda495305c97319adc2896" prot="private" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>tabx</name></member>
      <member refid="classcrpropa_1_1SynchrotronRadiation_1a25414d763dcc674239a96441ae4ff8ca" prot="private" virt="non-virtual"><scope>crpropa::SynchrotronRadiation</scope><name>thinning</name></member>
      <member refid="classcrpropa_1_1Module_1a33bac84c3f29d49ffdb4c536cdf1e367" prot="public" virt="virtual"><scope>crpropa::SynchrotronRadiation</scope><name>~Module</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
