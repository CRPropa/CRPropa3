<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classcrpropa_1_1Random" kind="class" language="C++" prot="public">
    <compoundname>crpropa::Random</compoundname>
    <includes refid="Random_8h" local="no">crpropa/Random.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classcrpropa_1_1Random_1a06fc87d81c62e9abb8790b6e5713c55b" prot="public" static="no" strong="no">
        <type></type>
        <name>@0</name>
        <enumvalue id="classcrpropa_1_1Random_1a06fc87d81c62e9abb8790b6e5713c55ba2c63acbe79d9f41ba6bb7766e9c37702" prot="public">
          <name>N</name>
          <initializer>= 624</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="99" column="1" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="enum" id="classcrpropa_1_1Random_1adf764cbdea00d65edcd07bb9953ad2b7" prot="public" static="no" strong="no">
        <type></type>
        <name>@1</name>
        <enumvalue id="classcrpropa_1_1Random_1adf764cbdea00d65edcd07bb9953ad2b7a793562cbf5bffacba71303cee907ef7d" prot="public">
          <name>SAVE</name>
          <initializer>= N + 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="100" column="1" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" bodystart="100" bodyend="100"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classcrpropa_1_1Random_1a99fb83031ce9923c84392b4e92f956b5" prot="private" static="no" strong="no">
        <type></type>
        <name>@2</name>
        <enumvalue id="classcrpropa_1_1Random_1a99fb83031ce9923c84392b4e92f956b5a51ca6c63d97347ee58cc7da59ab6994b" prot="private">
          <name>M</name>
          <initializer>= 397</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="103" column="1" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" bodystart="103" bodyend="103"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcrpropa_1_1Random_1a60384ed701e8ece1ac6bbd0190bcd0d7" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t state[N]</definition>
        <argsstring>[N]</argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="104" column="10" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1Random_1a4ec439b2172d9edbc207caa07209825a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; uint32_t &gt;</type>
        <definition>std::vector&lt;uint32_t&gt; initial_seed</definition>
        <argsstring></argsstring>
        <name>initial_seed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="105" column="13" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1Random_1af5f51082365de5e01285d1fa033ba1ff" prot="private" static="no" mutable="no">
        <type>uint32_t *</type>
        <definition>uint32_t* pNext</definition>
        <argsstring></argsstring>
        <name>pNext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="106" column="10" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1Random_1ad8f5e19e19f12974c9713e920ec54331" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int left</definition>
        <argsstring></argsstring>
        <name>left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="107" column="5" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcrpropa_1_1Random_1a56b1112275f5ed766fc77897514bb982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Random</definition>
        <argsstring>(const uint32_t &amp;oneSeed)</argsstring>
        <name>Random</name>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>oneSeed</declname>
        </param>
        <briefdescription>
<para>initialize with a simple uint32_t </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1ad62a5cac2461f1ef702049da4f97f285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Random</definition>
        <argsstring>(uint32_t *const bigSeed, uint32_t const seedLength=N)</argsstring>
        <name>Random</name>
        <param>
          <type>uint32_t *const</type>
          <declname>bigSeed</declname>
        </param>
        <param>
          <type>uint32_t const</type>
          <declname>seedLength</declname>
          <defval>N</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1aa0cd23a16025cfeef7b8810eeb2a5d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Random</definition>
        <argsstring>()</argsstring>
        <name>Random</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>auto-initialize with /dev/urandom or time() and clock() Do NOT use for CRYPTOGRAPHY without securely hashing several returned values together, otherwise the generator state can be learned after reading 624 consecutive values. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a78309d923f245b6acf167260194ba6e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rand</definition>
        <argsstring>()</argsstring>
        <name>rand</name>
        <briefdescription>
<para>real number in [0,1] </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="121" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a6b54c1bfd54a46e292478870554eb4d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rand</definition>
        <argsstring>(const double &amp;n)</argsstring>
        <name>rand</name>
        <param>
          <type>const double &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>real number in [0,n] </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="122" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1adfd027765dc6de35f4305204edf51622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double randExc</definition>
        <argsstring>()</argsstring>
        <name>randExc</name>
        <briefdescription>
<para>real number in [0,1) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="123" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1ad9888d54bf71c0c6bb5941394a0e5651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double randExc</definition>
        <argsstring>(const double &amp;n)</argsstring>
        <name>randExc</name>
        <param>
          <type>const double &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>real number in [0,n) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="124" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a540919a8c8868928fffce58c66d1b91e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double randDblExc</definition>
        <argsstring>()</argsstring>
        <name>randDblExc</name>
        <briefdescription>
<para>real number in (0,1) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="125" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a680cbcf457bdc668d1a4d9a1c8bb882b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double randDblExc</definition>
        <argsstring>(const double &amp;n)</argsstring>
        <name>randDblExc</name>
        <param>
          <type>const double &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>real number in (0,n) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="126" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1ac4c22a5f0d4edb44e3cee1d6bbd5150b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t randInt</definition>
        <argsstring>()</argsstring>
        <name>randInt</name>
        <briefdescription>
<para>integer in [0,2**32-1] </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="129" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a878fbf49dbc79913221d45739fa92bf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t randInt</definition>
        <argsstring>(const uint32_t &amp;n)</argsstring>
        <name>randInt</name>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>integer in [0,n] for n &lt; 2**32 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="130" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a957487771e79552480efa2f2ed887261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t randInt64</definition>
        <argsstring>()</argsstring>
        <name>randInt64</name>
        <briefdescription>
<para>integer in [0, 2**64 -1]. PROBABLY NOT SECURE TO USE </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="132" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a87c673ee0416521c657d34434ea4bfeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t randInt64</definition>
        <argsstring>(const uint64_t &amp;n)</argsstring>
        <name>randInt64</name>
        <param>
          <type>const uint64_t &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>integer in [0, n] for n &lt; 2**64 -1. PROBABLY NOT SECURE TO USE </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="133" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a8ba58318b0e39bc2e453dd4dcac1f00f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
<para>same as <ref refid="classcrpropa_1_1Random_1a78309d923f245b6acf167260194ba6e1" kindref="member">rand()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="135" column="8" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1ae021627627a0dbdbd19b503a3955dcc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rand53</definition>
        <argsstring>()</argsstring>
        <name>rand53</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>real number in [0,1) (capacity of IEEE double precision) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="138" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a4b16357aa8da99122fa67aaba2653d68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double randExponential</definition>
        <argsstring>()</argsstring>
        <name>randExponential</name>
        <briefdescription>
<para>Exponential distribution in (0,inf) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="140" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1aa9ff74123d4d205b49c9c8c44b2b3af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double randNorm</definition>
        <argsstring>(const double &amp;mean=0.0, const double &amp;variance=1.0)</argsstring>
        <name>randNorm</name>
        <param>
          <type>const double &amp;</type>
          <declname>mean</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>variance</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Normal distributed random number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="142" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a676ea228bb8be981a245f243599be2ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double randUniform</definition>
        <argsstring>(double min, double max)</argsstring>
        <name>randUniform</name>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Uniform distribution in [min, max]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="144" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a22b7848147a9fecaa227fe4170ae6c6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double randRayleigh</definition>
        <argsstring>(double sigma)</argsstring>
        <name>randRayleigh</name>
        <param>
          <type>double</type>
          <declname>sigma</declname>
        </param>
        <briefdescription>
<para>Rayleigh distributed random number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="146" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a0ef89b01dbab3b7af11d83ebbb088caf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double randFisher</definition>
        <argsstring>(double k)</argsstring>
        <name>randFisher</name>
        <param>
          <type>double</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Fisher distributed random number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="148" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1ab70ffcf4477320f22f8c4b70756f60ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t randBin</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;cdf)</argsstring>
        <name>randBin</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>cdf</declname>
        </param>
        <briefdescription>
<para>Draw a random bin from a (unnormalized) cumulative distribution function, without leading zero. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="151" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1ab4e6c23c7c183cf426ab1fc941d641ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t randBin</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;cdf)</argsstring>
        <name>randBin</name>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>cdf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="152" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a72fcc3b309bcab75050c60ffa2659e3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref></type>
        <definition>Vector3d randVector</definition>
        <argsstring>()</argsstring>
        <name>randVector</name>
        <briefdescription>
<para><ref refid="classcrpropa_1_1Random" kindref="compound">Random</ref> point on a unit-sphere. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="155" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a61c9eacb9b10051428e5302d47b43c6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref></type>
        <definition>Vector3d randVectorAroundMean</definition>
        <argsstring>(const Vector3d &amp;meanDirection, double angle)</argsstring>
        <name>randVectorAroundMean</name>
        <param>
          <type>const <ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref> &amp;</type>
          <declname>meanDirection</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para><ref refid="classcrpropa_1_1Random" kindref="compound">Random</ref> vector with given angular separation around mean direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="157" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a59845772e010c85222696da08143282d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref></type>
        <definition>Vector3d randFisherVector</definition>
        <argsstring>(const Vector3d &amp;meanDirection, double kappa)</argsstring>
        <name>randFisherVector</name>
        <param>
          <type>const <ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref> &amp;</type>
          <declname>meanDirection</declname>
        </param>
        <param>
          <type>double</type>
          <declname>kappa</declname>
        </param>
        <briefdescription>
<para>Fisher distributed random vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="159" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a81c75a710fe75ed3ea662b23591dd171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref></type>
        <definition>Vector3d randConeVector</definition>
        <argsstring>(const Vector3d &amp;meanDirection, double angularRadius)</argsstring>
        <name>randConeVector</name>
        <param>
          <type>const <ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref> &amp;</type>
          <declname>meanDirection</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angularRadius</declname>
        </param>
        <briefdescription>
<para>Uniform distributed random vector inside a cone. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="161" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a546a92d9acde0f1337fb3c80787ac4b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref></type>
        <definition>Vector3d randVectorLamberts</definition>
        <argsstring>()</argsstring>
        <name>randVectorLamberts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classcrpropa_1_1Random" kindref="compound">Random</ref> lamberts distributed vector with theta distribution: sin(t) * cos(t), aka cosine law (<ulink url="https://en.wikipedia.org/wiki/Lambert%27s_cosine_law">https://en.wikipedia.org/wiki/Lambert%27s_cosine_law</ulink>), for a surface element with normal vector pointing in positive z-axis (0, 0, 1) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="165" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a74914699e2bb54084f582a86f2a2a014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref></type>
        <definition>Vector3d randVectorLamberts</definition>
        <argsstring>(const Vector3d &amp;normalVector)</argsstring>
        <name>randVectorLamberts</name>
        <param>
          <type>const <ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref> &amp;</type>
          <declname>normalVector</declname>
        </param>
        <briefdescription>
<para>Same as above but rotated to the respective normalVector of surface element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="167" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1abcd421d6ac5d8720014afa6e6e9ec9af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref></type>
        <definition>Vector3d randomInterpolatedPosition</definition>
        <argsstring>(const Vector3d &amp;a, const Vector3d &amp;b)</argsstring>
        <name>randomInterpolatedPosition</name>
        <param>
          <type>const <ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classcrpropa_1_1Vector3" kindref="compound">Vector3d</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>_Position vector uniformly distributed within propagation step size bin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="169" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a0cd29fd1c9f315dbd0630fc3462d9831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double randPowerLaw</definition>
        <argsstring>(double index, double min, double max)</argsstring>
        <name>randPowerLaw</name>
        <param>
          <type>double</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Power-law distribution of a given differential spectral index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="172" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1abb08d2082cd8525b8968d45ba6b06378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double randBrokenPowerLaw</definition>
        <argsstring>(double index1, double index2, double breakpoint, double min, double max)</argsstring>
        <name>randBrokenPowerLaw</name>
        <param>
          <type>double</type>
          <declname>index1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>index2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>breakpoint</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Broken power-law distribution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="174" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1af236dea62d3fe3989b66efea3d803d6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void seed</definition>
        <argsstring>(const uint32_t oneSeed)</argsstring>
        <name>seed</name>
        <param>
          <type>const uint32_t</type>
          <declname>oneSeed</declname>
        </param>
        <briefdescription>
<para>Seed the generator with a simple uint32_t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="177" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a7a771913a48046baa7a1d030fc95919d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void seed</definition>
        <argsstring>(uint32_t *const bigSeed, const uint32_t seedLength=N)</argsstring>
        <name>seed</name>
        <param>
          <type>uint32_t *const</type>
          <declname>bigSeed</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>seedLength</declname>
          <defval>N</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Seed the generator with an array of uint32_t&apos;s There are 2^19937-1 possible initial states. This function allows all of those to be accessed by providing at least 19937 bits (with a default seed length of N = 624 uint32_t&apos;s). Any bits above the lower 32 in each element are discarded. Just call <ref refid="classcrpropa_1_1Random_1a78c8e327d0192e2a6c1df70828a86ec6" kindref="member">seed()</ref> if you want to get array from /dev/urandom </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="184" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a6eb14d1fa3a6bb3cdcbbf6917be80527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void seed</definition>
        <argsstring>(const std::string &amp;b64Seed)</argsstring>
        <name>seed</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>b64Seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="186" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a78c8e327d0192e2a6c1df70828a86ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void seed</definition>
        <argsstring>()</argsstring>
        <name>seed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Seed the generator with an array from /dev/urandom if available Otherwise use a hash of time() and clock() values </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="189" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a9b7609425232b19c2b8b8881df7bc283" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void save</definition>
        <argsstring>(uint32_t *saveArray) const</argsstring>
        <name>save</name>
        <param>
          <type>uint32_t *</type>
          <declname>saveArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="192" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1af5cc3013bd01511a65db801a2d064900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void load</definition>
        <argsstring>(uint32_t *const loadArray)</argsstring>
        <name>load</name>
        <param>
          <type>uint32_t *const</type>
          <declname>loadArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="193" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a787f7e8614cbf6f8ca8cb7c6610104a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint32_t &gt; &amp;</type>
        <definition>const std::vector&lt; uint32_t &gt; &amp; getSeed</definition>
        <argsstring>() const</argsstring>
        <name>getSeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="194" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1ab3d7fa7965ab742642883dcf1a827adb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string getSeed_base64</definition>
        <argsstring>() const</argsstring>
        <name>getSeed_base64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="195" column="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classcrpropa_1_1Random_1af7ad29f134e696f0c1c88bbb1a84c033" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Random &amp;mtrand)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classcrpropa_1_1Random" kindref="compound">Random</ref> &amp;</type>
          <declname>mtrand</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="197" column="8"/>
      </memberdef>
      <memberdef kind="friend" id="classcrpropa_1_1Random_1ac38c403f132634be45f39460cc634e82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Random &amp;mtrand)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classcrpropa_1_1Random" kindref="compound">Random</ref> &amp;</type>
          <declname>mtrand</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="198" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcrpropa_1_1Random_1aac1cabbcd67bd144350d24312cf4998b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcrpropa_1_1Random" kindref="compound">Random</ref> &amp;</type>
        <definition>static Random &amp; instance</definition>
        <argsstring>()</argsstring>
        <name>instance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="200" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a1e9531ae635ef7794bdbe7d7034951b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void seedThreads</definition>
        <argsstring>(const uint32_t oneSeed)</argsstring>
        <name>seedThreads</name>
        <param>
          <type>const uint32_t</type>
          <declname>oneSeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="201" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a9961004bfdf94139571a2fe3081112e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::vector&lt; uint32_t &gt; &gt;</type>
        <definition>static std::vector&lt; std::vector&lt; uint32_t &gt; &gt; getSeedThreads</definition>
        <argsstring>()</argsstring>
        <name>getSeedThreads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="202" column="20"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classcrpropa_1_1Random_1a4be5586c72dbb90585801c742f4f3c92" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initialize</definition>
        <argsstring>(const uint32_t oneSeed)</argsstring>
        <name>initialize</name>
        <param>
          <type>const uint32_t</type>
          <declname>oneSeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize generator state with seed See Knuth TAOCP Vol 2, 3rd Ed, p.106 for multiplier. In previous versions, most significant bits (MSBs) of the seed affect only MSBs of the state array. Modified 9 Jan 2002 by Makoto Matsumoto. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="209" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1af0de4b4127be745f3a835f316c6d2d03" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reload</definition>
        <argsstring>()</argsstring>
        <name>reload</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate N new values in state Made clearer and faster by Matthew Bellew (<ulink url="mailto:matthew.bellew@home.com">matthew.bellew@home.com</ulink>) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="213" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a249c5988a47132d7101a7e19ae384e86" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t hiBit</definition>
        <argsstring>(const uint32_t &amp;u) const</argsstring>
        <name>hiBit</name>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="214" column="10" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1ad4067337764a9e0323266386abb3182e" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t loBit</definition>
        <argsstring>(const uint32_t &amp;u) const</argsstring>
        <name>loBit</name>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="215" column="10" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1adacb9fd53d36720400994bf1c428a343" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t loBits</definition>
        <argsstring>(const uint32_t &amp;u) const</argsstring>
        <name>loBits</name>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="216" column="10" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a55295ec93ad9ceb725eb7189f0c5508d" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mixBits</definition>
        <argsstring>(const uint32_t &amp;u, const uint32_t &amp;v) const</argsstring>
        <name>mixBits</name>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="217" column="10" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" bodystart="217" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Random_1a56bc9770ec45f4560d8a432e2635ce08" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t twist</definition>
        <argsstring>(const uint32_t &amp;m, const uint32_t &amp;s0, const uint32_t &amp;s1) const</argsstring>
        <name>twist</name>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>s0</declname>
        </param>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>s1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="224" column="10" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" bodystart="224" bodyend="225"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classcrpropa_1_1Random_1a1ea1b43430910a6aff12643587fd9025" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hash</definition>
        <argsstring>(time_t t, clock_t c)</argsstring>
        <name>hash</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <param>
          <type>clock_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a uint32_t from t and c Better than uint32_t(x) in case x is floating point in [0,1] Based on code by Lawrence Kirby (<ulink url="mailto:fred@genesis.demon.co.uk">fred@genesis.demon.co.uk</ulink>) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="234" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classcrpropa_1_1Random" kindref="compound">Random</ref> number generator. </para>
    </briefdescription>
    <detaileddescription>
<para>Mersenne Twister random number generator <ndash/> a C++ class <ref refid="classcrpropa_1_1Random" kindref="compound">Random</ref> Based on code by Makoto Matsumoto, Takuji Nishimura, and Shawn Cokus Richard J. Wagner v1.0 15 May 2003 <ulink url="mailto:rjwagner@writeme.com">rjwagner@writeme.com</ulink> </para>
    </detaileddescription>
    <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" line="97" column="1" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Random.h" bodystart="97" bodyend="236"/>
    <listofallmembers>
      <member refid="classcrpropa_1_1Random_1a787f7e8614cbf6f8ca8cb7c6610104a6" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>getSeed</name></member>
      <member refid="classcrpropa_1_1Random_1ab3d7fa7965ab742642883dcf1a827adb" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>getSeed_base64</name></member>
      <member refid="classcrpropa_1_1Random_1a9961004bfdf94139571a2fe3081112e7" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>getSeedThreads</name></member>
      <member refid="classcrpropa_1_1Random_1a1ea1b43430910a6aff12643587fd9025" prot="private" virt="non-virtual"><scope>crpropa::Random</scope><name>hash</name></member>
      <member refid="classcrpropa_1_1Random_1a249c5988a47132d7101a7e19ae384e86" prot="private" virt="non-virtual"><scope>crpropa::Random</scope><name>hiBit</name></member>
      <member refid="classcrpropa_1_1Random_1a4ec439b2172d9edbc207caa07209825a" prot="private" virt="non-virtual"><scope>crpropa::Random</scope><name>initial_seed</name></member>
      <member refid="classcrpropa_1_1Random_1a4be5586c72dbb90585801c742f4f3c92" prot="private" virt="non-virtual"><scope>crpropa::Random</scope><name>initialize</name></member>
      <member refid="classcrpropa_1_1Random_1aac1cabbcd67bd144350d24312cf4998b" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>instance</name></member>
      <member refid="classcrpropa_1_1Random_1ad8f5e19e19f12974c9713e920ec54331" prot="private" virt="non-virtual"><scope>crpropa::Random</scope><name>left</name></member>
      <member refid="classcrpropa_1_1Random_1af5cc3013bd01511a65db801a2d064900" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>load</name></member>
      <member refid="classcrpropa_1_1Random_1ad4067337764a9e0323266386abb3182e" prot="private" virt="non-virtual"><scope>crpropa::Random</scope><name>loBit</name></member>
      <member refid="classcrpropa_1_1Random_1adacb9fd53d36720400994bf1c428a343" prot="private" virt="non-virtual"><scope>crpropa::Random</scope><name>loBits</name></member>
      <member refid="classcrpropa_1_1Random_1a99fb83031ce9923c84392b4e92f956b5a51ca6c63d97347ee58cc7da59ab6994b" prot="private" virt="non-virtual"><scope>crpropa::Random</scope><name>M</name></member>
      <member refid="classcrpropa_1_1Random_1a55295ec93ad9ceb725eb7189f0c5508d" prot="private" virt="non-virtual"><scope>crpropa::Random</scope><name>mixBits</name></member>
      <member refid="classcrpropa_1_1Random_1a06fc87d81c62e9abb8790b6e5713c55ba2c63acbe79d9f41ba6bb7766e9c37702" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>N</name></member>
      <member refid="classcrpropa_1_1Random_1a8ba58318b0e39bc2e453dd4dcac1f00f" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>operator()</name></member>
      <member refid="classcrpropa_1_1Random_1af7ad29f134e696f0c1c88bbb1a84c033" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>operator&lt;&lt;</name></member>
      <member refid="classcrpropa_1_1Random_1ac38c403f132634be45f39460cc634e82" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>operator&gt;&gt;</name></member>
      <member refid="classcrpropa_1_1Random_1af5f51082365de5e01285d1fa033ba1ff" prot="private" virt="non-virtual"><scope>crpropa::Random</scope><name>pNext</name></member>
      <member refid="classcrpropa_1_1Random_1a78309d923f245b6acf167260194ba6e1" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>rand</name></member>
      <member refid="classcrpropa_1_1Random_1a6b54c1bfd54a46e292478870554eb4d0" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>rand</name></member>
      <member refid="classcrpropa_1_1Random_1ae021627627a0dbdbd19b503a3955dcc9" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>rand53</name></member>
      <member refid="classcrpropa_1_1Random_1ab70ffcf4477320f22f8c4b70756f60ed" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randBin</name></member>
      <member refid="classcrpropa_1_1Random_1ab4e6c23c7c183cf426ab1fc941d641ed" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randBin</name></member>
      <member refid="classcrpropa_1_1Random_1abb08d2082cd8525b8968d45ba6b06378" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randBrokenPowerLaw</name></member>
      <member refid="classcrpropa_1_1Random_1a81c75a710fe75ed3ea662b23591dd171" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randConeVector</name></member>
      <member refid="classcrpropa_1_1Random_1a540919a8c8868928fffce58c66d1b91e" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randDblExc</name></member>
      <member refid="classcrpropa_1_1Random_1a680cbcf457bdc668d1a4d9a1c8bb882b" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randDblExc</name></member>
      <member refid="classcrpropa_1_1Random_1adfd027765dc6de35f4305204edf51622" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randExc</name></member>
      <member refid="classcrpropa_1_1Random_1ad9888d54bf71c0c6bb5941394a0e5651" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randExc</name></member>
      <member refid="classcrpropa_1_1Random_1a4b16357aa8da99122fa67aaba2653d68" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randExponential</name></member>
      <member refid="classcrpropa_1_1Random_1a0ef89b01dbab3b7af11d83ebbb088caf" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randFisher</name></member>
      <member refid="classcrpropa_1_1Random_1a59845772e010c85222696da08143282d" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randFisherVector</name></member>
      <member refid="classcrpropa_1_1Random_1ac4c22a5f0d4edb44e3cee1d6bbd5150b" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randInt</name></member>
      <member refid="classcrpropa_1_1Random_1a878fbf49dbc79913221d45739fa92bf5" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randInt</name></member>
      <member refid="classcrpropa_1_1Random_1a957487771e79552480efa2f2ed887261" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randInt64</name></member>
      <member refid="classcrpropa_1_1Random_1a87c673ee0416521c657d34434ea4bfeb" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randInt64</name></member>
      <member refid="classcrpropa_1_1Random_1aa9ff74123d4d205b49c9c8c44b2b3af3" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randNorm</name></member>
      <member refid="classcrpropa_1_1Random_1a56b1112275f5ed766fc77897514bb982" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>Random</name></member>
      <member refid="classcrpropa_1_1Random_1ad62a5cac2461f1ef702049da4f97f285" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>Random</name></member>
      <member refid="classcrpropa_1_1Random_1aa0cd23a16025cfeef7b8810eeb2a5d36" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>Random</name></member>
      <member refid="classcrpropa_1_1Random_1abcd421d6ac5d8720014afa6e6e9ec9af" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randomInterpolatedPosition</name></member>
      <member refid="classcrpropa_1_1Random_1a0cd29fd1c9f315dbd0630fc3462d9831" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randPowerLaw</name></member>
      <member refid="classcrpropa_1_1Random_1a22b7848147a9fecaa227fe4170ae6c6f" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randRayleigh</name></member>
      <member refid="classcrpropa_1_1Random_1a676ea228bb8be981a245f243599be2ba" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randUniform</name></member>
      <member refid="classcrpropa_1_1Random_1a72fcc3b309bcab75050c60ffa2659e3e" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randVector</name></member>
      <member refid="classcrpropa_1_1Random_1a61c9eacb9b10051428e5302d47b43c6f" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randVectorAroundMean</name></member>
      <member refid="classcrpropa_1_1Random_1a546a92d9acde0f1337fb3c80787ac4b6" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randVectorLamberts</name></member>
      <member refid="classcrpropa_1_1Random_1a74914699e2bb54084f582a86f2a2a014" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>randVectorLamberts</name></member>
      <member refid="classcrpropa_1_1Random_1af0de4b4127be745f3a835f316c6d2d03" prot="private" virt="non-virtual"><scope>crpropa::Random</scope><name>reload</name></member>
      <member refid="classcrpropa_1_1Random_1a9b7609425232b19c2b8b8881df7bc283" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>save</name></member>
      <member refid="classcrpropa_1_1Random_1adf764cbdea00d65edcd07bb9953ad2b7a793562cbf5bffacba71303cee907ef7d" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>SAVE</name></member>
      <member refid="classcrpropa_1_1Random_1af236dea62d3fe3989b66efea3d803d6c" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>seed</name></member>
      <member refid="classcrpropa_1_1Random_1a7a771913a48046baa7a1d030fc95919d" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>seed</name></member>
      <member refid="classcrpropa_1_1Random_1a6eb14d1fa3a6bb3cdcbbf6917be80527" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>seed</name></member>
      <member refid="classcrpropa_1_1Random_1a78c8e327d0192e2a6c1df70828a86ec6" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>seed</name></member>
      <member refid="classcrpropa_1_1Random_1a1e9531ae635ef7794bdbe7d7034951b3" prot="public" virt="non-virtual"><scope>crpropa::Random</scope><name>seedThreads</name></member>
      <member refid="classcrpropa_1_1Random_1a60384ed701e8ece1ac6bbd0190bcd0d7" prot="private" virt="non-virtual"><scope>crpropa::Random</scope><name>state</name></member>
      <member refid="classcrpropa_1_1Random_1a56bc9770ec45f4560d8a432e2635ce08" prot="private" virt="non-virtual"><scope>crpropa::Random</scope><name>twist</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
