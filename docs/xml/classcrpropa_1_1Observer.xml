<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classcrpropa_1_1Observer" kind="class" language="C++" prot="public">
    <compoundname>crpropa::Observer</compoundname>
    <basecompoundref refid="classcrpropa_1_1Module" prot="public" virt="non-virtual">Module</basecompoundref>
    <includes refid="Observer_8h" local="no">crpropa/module/Observer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcrpropa_1_1Observer_1aa1a0c9f8f0638bcc971f0ffd782e1de5" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string flagKey</definition>
        <argsstring></argsstring>
        <name>flagKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" line="45" column="13" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1Observer_1a043a84ce194fcf7e5eefa98209415234" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string flagValue</definition>
        <argsstring></argsstring>
        <name>flagValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" line="46" column="13" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1Observer_1af0445794f2f20c04beb427d5bdc7e2a0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1ObserverFeature" kindref="compound">ObserverFeature</ref> &gt; &gt;</type>
        <definition>std::vector&lt;ref_ptr&lt;ObserverFeature&gt; &gt; features</definition>
        <argsstring></argsstring>
        <name>features</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" line="48" column="13" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1Observer_1a8714c2a40aef9c57969cfd1191c68197" prot="private" static="no" mutable="no">
        <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Module" kindref="compound">Module</ref> &gt;</type>
        <definition>ref_ptr&lt;Module&gt; detectionAction</definition>
        <argsstring></argsstring>
        <name>detectionAction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" line="49" column="9" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1Observer_1a701462c38c940dfa838cc67408d29fe7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool clone</definition>
        <argsstring></argsstring>
        <name>clone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" line="50" column="6" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrpropa_1_1Observer_1a16844d76dc2fb74eea4f563f8f09a68b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool makeInactive</definition>
        <argsstring></argsstring>
        <name>makeInactive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" line="51" column="6" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcrpropa_1_1Observer_1abbd00a8000bd3ee5cd7e35aeb436f937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Observer</definition>
        <argsstring>()</argsstring>
        <name>Observer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default observer constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Observer_1afa35a046f61698f149b41bd46c0fa2f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add</definition>
        <argsstring>(ObserverFeature *feature)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="classcrpropa_1_1ObserverFeature" kindref="compound">ObserverFeature</ref> *</type>
          <declname>feature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a feature to the observer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feature</parametername>
</parameternamelist>
<parameterdescription>
<para>observer feature to be add to the <ref refid="classcrpropa_1_1Observer" kindref="compound">Observer</ref> object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" line="59" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Observer_1afd250bb55e27b2b31fd2f67434195a0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void onDetection</definition>
        <argsstring>(Module *action, bool clone=false)</argsstring>
        <name>onDetection</name>
        <param>
          <type><ref refid="classcrpropa_1_1Module" kindref="compound">Module</ref> *</type>
          <declname>action</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clone</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform some specific actions upon detection of candidate <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>module that performs a given action when candidate is detected </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clone</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, clone candidate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" line="64" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Observer_1ab59d2de78ed0589c122df3d6c0478b41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void process</definition>
        <argsstring>(Candidate *candidate) const</argsstring>
        <name>process</name>
        <reimplements refid="classcrpropa_1_1Module_1adea37d81da751bd3c2825652e1c215de">process</reimplements>
        <param>
          <type><ref refid="classcrpropa_1_1Candidate" kindref="compound">Candidate</ref> *</type>
          <declname>candidate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" line="65" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Observer_1aea425314aebc36d0f6bf7671705158da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string getDescription</definition>
        <argsstring>() const</argsstring>
        <name>getDescription</name>
        <reimplements refid="classcrpropa_1_1Module_1a9025df426d11cbe30c5500d3ffb5d33c">getDescription</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" line="66" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Observer_1ab881a6dbeb993ce6deb3e41e3e33b417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setFlag</definition>
        <argsstring>(std::string key, std::string value)</argsstring>
        <name>setFlag</name>
        <param>
          <type>std::string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" line="67" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Observer_1a9309c8d3ead9f5e4023436fa7620ad1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setDeactivateOnDetection</definition>
        <argsstring>(bool deactivate)</argsstring>
        <name>setDeactivateOnDetection</name>
        <param>
          <type>bool</type>
          <declname>deactivate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine whether candidate should be deactivated on detection. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deactivate</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, deactivate detected particles; if false, continue tracking them </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" line="71" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Module_1a3406b56004afdbe7a1815a541d40de99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setDescription</definition>
        <argsstring>(const std::string &amp;description)</argsstring>
        <name>setDescription</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Module.h" line="25" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Module_1a9f2321c49330b61a52ce55c2015e4c49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void process</definition>
        <argsstring>(ref_ptr&lt; Candidate &gt; candidate) const</argsstring>
        <name>process</name>
        <param>
          <type><ref refid="classcrpropa_1_1ref__ptr" kindref="compound">ref_ptr</ref>&lt; <ref refid="classcrpropa_1_1Candidate" kindref="compound">Candidate</ref> &gt;</type>
          <declname>candidate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Module.h" line="27" column="13" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Module.h" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Referenced_1a6ef7442f4d857baf3d3a39fdeec4aadd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t addReference</definition>
        <argsstring>() const</argsstring>
        <name>addReference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="42" column="15" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="42" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Referenced_1ab9f5dbbba1431274016b3d74426953f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t removeReference</definition>
        <argsstring>() const</argsstring>
        <name>removeReference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="56" column="15" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="56" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Referenced_1adab41cca5664d4668930f93beefa39b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int removeReferenceNoDelete</definition>
        <argsstring>() const</argsstring>
        <name>removeReferenceNoDelete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="80" column="5" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classcrpropa_1_1Referenced_1a74487fc4399bfa67c7251dae5d4247cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t getReferenceCount</definition>
        <argsstring>() const</argsstring>
        <name>getReferenceCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" line="84" column="15" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/Referenced.h" bodystart="84" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>General particle observer. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Observer</label>
        <link refid="classcrpropa_1_1Observer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Module</label>
        <link refid="classcrpropa_1_1Module"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Referenced</label>
        <link refid="classcrpropa_1_1Referenced"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Observer</label>
        <link refid="classcrpropa_1_1Observer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Module</label>
        <link refid="classcrpropa_1_1Module"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Referenced</label>
        <link refid="classcrpropa_1_1Referenced"/>
      </node>
    </collaborationgraph>
    <location file="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" line="44" column="1" bodyfile="/Users/rab/Dropbox/softwares/CRPropa/CRPropa3-dev/include/crpropa/module/Observer.h" bodystart="44" bodyend="72"/>
    <listofallmembers>
      <member refid="classcrpropa_1_1Observer_1afa35a046f61698f149b41bd46c0fa2f5" prot="public" virt="non-virtual"><scope>crpropa::Observer</scope><name>add</name></member>
      <member refid="classcrpropa_1_1Referenced_1a6ef7442f4d857baf3d3a39fdeec4aadd" prot="public" virt="non-virtual"><scope>crpropa::Observer</scope><name>addReference</name></member>
      <member refid="classcrpropa_1_1Observer_1a701462c38c940dfa838cc67408d29fe7" prot="private" virt="non-virtual"><scope>crpropa::Observer</scope><name>clone</name></member>
      <member refid="classcrpropa_1_1Observer_1a8714c2a40aef9c57969cfd1191c68197" prot="private" virt="non-virtual"><scope>crpropa::Observer</scope><name>detectionAction</name></member>
      <member refid="classcrpropa_1_1Observer_1af0445794f2f20c04beb427d5bdc7e2a0" prot="private" virt="non-virtual"><scope>crpropa::Observer</scope><name>features</name></member>
      <member refid="classcrpropa_1_1Observer_1aa1a0c9f8f0638bcc971f0ffd782e1de5" prot="private" virt="non-virtual"><scope>crpropa::Observer</scope><name>flagKey</name></member>
      <member refid="classcrpropa_1_1Observer_1a043a84ce194fcf7e5eefa98209415234" prot="private" virt="non-virtual"><scope>crpropa::Observer</scope><name>flagValue</name></member>
      <member refid="classcrpropa_1_1Observer_1aea425314aebc36d0f6bf7671705158da" prot="public" virt="virtual"><scope>crpropa::Observer</scope><name>getDescription</name></member>
      <member refid="classcrpropa_1_1Referenced_1a74487fc4399bfa67c7251dae5d4247cd" prot="public" virt="non-virtual"><scope>crpropa::Observer</scope><name>getReferenceCount</name></member>
      <member refid="classcrpropa_1_1Observer_1a16844d76dc2fb74eea4f563f8f09a68b" prot="private" virt="non-virtual"><scope>crpropa::Observer</scope><name>makeInactive</name></member>
      <member refid="classcrpropa_1_1Module_1a48d34dc872809277e652493dc3a4746d" prot="public" virt="non-virtual"><scope>crpropa::Observer</scope><name>Module</name></member>
      <member refid="classcrpropa_1_1Observer_1abbd00a8000bd3ee5cd7e35aeb436f937" prot="public" virt="non-virtual"><scope>crpropa::Observer</scope><name>Observer</name></member>
      <member refid="classcrpropa_1_1Observer_1afd250bb55e27b2b31fd2f67434195a0f" prot="public" virt="non-virtual"><scope>crpropa::Observer</scope><name>onDetection</name></member>
      <member refid="classcrpropa_1_1Referenced_1a888be9022b30422e9c6256171d2ddd72" prot="public" virt="non-virtual"><scope>crpropa::Observer</scope><name>operator=</name></member>
      <member refid="classcrpropa_1_1Observer_1ab59d2de78ed0589c122df3d6c0478b41" prot="public" virt="virtual"><scope>crpropa::Observer</scope><name>process</name></member>
      <member refid="classcrpropa_1_1Module_1a9f2321c49330b61a52ce55c2015e4c49" prot="public" virt="non-virtual" ambiguityscope="crpropa::Module::"><scope>crpropa::Observer</scope><name>process</name></member>
      <member refid="classcrpropa_1_1Referenced_1a391f8e65894afa3547e70d95a589f631" prot="public" virt="non-virtual"><scope>crpropa::Observer</scope><name>Referenced</name></member>
      <member refid="classcrpropa_1_1Referenced_1a8e7407db7805ac439d0c4813bc1860a1" prot="public" virt="non-virtual"><scope>crpropa::Observer</scope><name>Referenced</name></member>
      <member refid="classcrpropa_1_1Referenced_1ab9f5dbbba1431274016b3d74426953f2" prot="public" virt="non-virtual"><scope>crpropa::Observer</scope><name>removeReference</name></member>
      <member refid="classcrpropa_1_1Referenced_1adab41cca5664d4668930f93beefa39b5" prot="public" virt="non-virtual"><scope>crpropa::Observer</scope><name>removeReferenceNoDelete</name></member>
      <member refid="classcrpropa_1_1Observer_1a9309c8d3ead9f5e4023436fa7620ad1b" prot="public" virt="non-virtual"><scope>crpropa::Observer</scope><name>setDeactivateOnDetection</name></member>
      <member refid="classcrpropa_1_1Module_1a3406b56004afdbe7a1815a541d40de99" prot="public" virt="non-virtual"><scope>crpropa::Observer</scope><name>setDescription</name></member>
      <member refid="classcrpropa_1_1Observer_1ab881a6dbeb993ce6deb3e41e3e33b417" prot="public" virt="non-virtual"><scope>crpropa::Observer</scope><name>setFlag</name></member>
      <member refid="classcrpropa_1_1Module_1a33bac84c3f29d49ffdb4c536cdf1e367" prot="public" virt="virtual"><scope>crpropa::Observer</scope><name>~Module</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
